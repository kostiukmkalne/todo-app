{
  "stats": {
    "suites": 1,
    "tests": 179,
    "passes": 176,
    "pending": 3,
    "failures": 0,
    "testsRegistered": 179,
    "passPercent": 98.32402234636872,
    "pendingPercent": 1.675977653631285,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "start": "2024-07-27T04:10:15.681Z",
    "end": "2024-07-27T04:12:04.889Z",
    "duration": 109208
  },
  "results": [
    {
      "uuid": "1c31bd4e-99ba-49d8-b779-de0cc31961bb",
      "title": "",
      "fullFile": "cypress/integration/page.spec.js",
      "file": "cypress/integration/page.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d39c19ce-b8d2-49ae-82b5-e07c8038add1",
          "title": "",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "06cef242-1bf2-47f0-ab20-fe954f53d4c7",
              "title": "Page with no todos",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should send 1 todos request",
                  "fullTitle": " Page with no todos should send 1 todos request",
                  "timedOut": null,
                  "duration": 1496,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const spy = cy.stub().callsFake(req => req.reply({\n  body: []\n})).as('loadCallback');\npage.mockLoad(spy).as('loadRequest');\npage.visit();\ncy.wait('@loadRequest');\ncy.wait(500);\ncy.get('@loadCallback').should('have.callCount', 1);",
                  "err": {},
                  "uuid": "38d059f0-16d9-4112-b35e-0fbb2ccf800d",
                  "parentUUID": "06cef242-1bf2-47f0-ab20-fe954f53d4c7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [
                {
                  "uuid": "a4fe43ee-b3e9-4443-8f71-ad67f52f5f2f",
                  "title": "",
                  "fullFile": "",
                  "file": "",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should have NewTodoField",
                      "fullTitle": " Page with no todos  should have NewTodoField",
                      "timedOut": null,
                      "duration": 333,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.newTodoField().should('exist');",
                      "err": {},
                      "uuid": "1dcc4d3c-d1a1-4719-9d31-406e22444c47",
                      "parentUUID": "a4fe43ee-b3e9-4443-8f71-ad67f52f5f2f",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should not have Todos",
                      "fullTitle": " Page with no todos  should not have Todos",
                      "timedOut": null,
                      "duration": 307,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "todos.assertCount(0);",
                      "err": {},
                      "uuid": "02ea0b2e-42ca-4e55-b316-e7543a286fab",
                      "parentUUID": "a4fe43ee-b3e9-4443-8f71-ad67f52f5f2f",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should not have Footer",
                      "fullTitle": " Page with no todos  should not have Footer",
                      "timedOut": null,
                      "duration": 327,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "filter.assertHidden();\npage.clearCompletedButton().should('not.exist');\npage.todosCounter().should('not.exist');",
                      "err": {},
                      "uuid": "bb7dc97a-2f96-49ca-9c35-cd513ef701eb",
                      "parentUUID": "a4fe43ee-b3e9-4443-8f71-ad67f52f5f2f",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should not show error message",
                      "fullTitle": " Page with no todos  should not show error message",
                      "timedOut": null,
                      "duration": 314,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "errorMessage.assertHidden();",
                      "err": {},
                      "uuid": "926108ae-6362-413c-92f7-4bed4937a60b",
                      "parentUUID": "a4fe43ee-b3e9-4443-8f71-ad67f52f5f2f",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "1dcc4d3c-d1a1-4719-9d31-406e22444c47",
                    "02ea0b2e-42ca-4e55-b316-e7543a286fab",
                    "bb7dc97a-2f96-49ca-9c35-cd513ef701eb",
                    "926108ae-6362-413c-92f7-4bed4937a60b"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1281,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                },
                {
                  "uuid": "6b330e91-0c12-4283-a9a9-910b91584554",
                  "title": "on loading error",
                  "fullFile": "",
                  "file": "",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should show error",
                      "fullTitle": " Page with no todos on loading error should show error",
                      "timedOut": null,
                      "duration": 316,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "errorMessage.assertVisible();",
                      "err": {},
                      "uuid": "ee91e65b-1332-471d-902e-71777d4a80ec",
                      "parentUUID": "6b330e91-0c12-4283-a9a9-910b91584554",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should show correct message",
                      "fullTitle": " Page with no todos on loading error should show correct message",
                      "timedOut": null,
                      "duration": 283,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "errorMessage.assertText('Unable to load todos');",
                      "err": {},
                      "uuid": "7cbb23d7-ecf6-44ab-821d-f70441b8a945",
                      "parentUUID": "6b330e91-0c12-4283-a9a9-910b91584554",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should hide error after 3 seconds",
                      "fullTitle": " Page with no todos on loading error should hide error after 3 seconds",
                      "timedOut": null,
                      "duration": 3338,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "// just in case\ncy.wait(50);\ncy.clock();\ncy.tick(2500);\nerrorMessage.assertVisible();\ncy.tick(500);\nerrorMessage.assertHidden();",
                      "err": {},
                      "uuid": "aee889cc-5499-4694-a315-d86144e5250c",
                      "parentUUID": "6b330e91-0c12-4283-a9a9-910b91584554",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should hide error on close button click",
                      "fullTitle": " Page with no todos on loading error should hide error on close button click",
                      "timedOut": null,
                      "duration": 3331,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "errorMessage.closeButton().click();\nerrorMessage.assertHidden();",
                      "err": {},
                      "uuid": "aab6458c-4ca1-484a-b860-5a6cc23939ee",
                      "parentUUID": "6b330e91-0c12-4283-a9a9-910b91584554",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "ee91e65b-1332-471d-902e-71777d4a80ec",
                    "7cbb23d7-ecf6-44ab-821d-f70441b8a945",
                    "aee889cc-5499-4694-a315-d86144e5250c",
                    "aab6458c-4ca1-484a-b860-5a6cc23939ee"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 7268,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                }
              ],
              "passes": [
                "38d059f0-16d9-4112-b35e-0fbb2ccf800d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1496,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "8f5038fb-d266-4561-a0a4-3ae295f111e3",
              "title": "Page with mixed todos",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should have NewTodoField",
                  "fullTitle": " Page with mixed todos should have NewTodoField",
                  "timedOut": null,
                  "duration": 342,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "page.newTodoField().should('exist');",
                  "err": {},
                  "uuid": "d9b4c686-38de-44ae-8200-11ae8e2473c9",
                  "parentUUID": "8f5038fb-d266-4561-a0a4-3ae295f111e3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should have all loaded todos",
                  "fullTitle": " Page with mixed todos should have all loaded todos",
                  "timedOut": null,
                  "duration": 336,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "todos.assertCount(5);",
                  "err": {},
                  "uuid": "98859de2-ffa0-4797-aab2-3aa50a33436c",
                  "parentUUID": "8f5038fb-d266-4561-a0a4-3ae295f111e3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should have delete buttons for every todo",
                  "fullTitle": " Page with mixed todos should have delete buttons for every todo",
                  "timedOut": null,
                  "duration": 315,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "todos.deleteButton(0).should('exist');",
                  "err": {},
                  "uuid": "916de7a2-ef94-4425-9fb8-54bdf957ed30",
                  "parentUUID": "8f5038fb-d266-4561-a0a4-3ae295f111e3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not have loaders",
                  "fullTitle": " Page with mixed todos should not have loaders",
                  "timedOut": null,
                  "duration": 351,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "todos.assertNotLoading(0);\ntodos.assertNotLoading(1);\ntodos.assertNotLoading(2);\ntodos.assertNotLoading(3);\ntodos.assertNotLoading(4);",
                  "err": {},
                  "uuid": "b735e761-f522-48d3-a382-35721e3413e8",
                  "parentUUID": "8f5038fb-d266-4561-a0a4-3ae295f111e3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should have correct todo titles",
                  "fullTitle": " Page with mixed todos should have correct todo titles",
                  "timedOut": null,
                  "duration": 364,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "todos.assertTitle(0, 'HTML');\ntodos.assertTitle(1, 'CSS');\ntodos.assertTitle(2, 'JS');\ntodos.assertTitle(3, 'TypeScript');\ntodos.assertTitle(4, 'React');",
                  "err": {},
                  "uuid": "2f4c26ea-f333-4e9a-a0de-42223a7b3405",
                  "parentUUID": "8f5038fb-d266-4561-a0a4-3ae295f111e3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should higlight all completed todos",
                  "fullTitle": " Page with mixed todos should higlight all completed todos",
                  "timedOut": null,
                  "duration": 312,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "todos.assertCompleted(0);\ntodos.assertCompleted(1);\ntodos.assertCompleted(2);",
                  "err": {},
                  "uuid": "673a843a-01f9-477f-a0dd-2b619744ba6a",
                  "parentUUID": "8f5038fb-d266-4561-a0a4-3ae295f111e3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not higlight not completed todos",
                  "fullTitle": " Page with mixed todos should not higlight not completed todos",
                  "timedOut": null,
                  "duration": 324,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "todos.assertNotCompleted(3);\ntodos.assertNotCompleted(4);",
                  "err": {},
                  "uuid": "9bdfb228-0105-4293-9f4d-52fdd8f2c298",
                  "parentUUID": "8f5038fb-d266-4561-a0a4-3ae295f111e3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should have correct completed statuses",
                  "fullTitle": " Page with mixed todos should have correct completed statuses",
                  "timedOut": null,
                  "duration": 344,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "todos.statusToggler(0).should('be.checked');\ntodos.statusToggler(1).should('be.checked');\ntodos.statusToggler(2).should('be.checked');\ntodos.statusToggler(3).should('not.be.checked');\ntodos.statusToggler(4).should('not.be.checked');",
                  "err": {},
                  "uuid": "f5415a35-dba9-4658-a416-c15f51f75590",
                  "parentUUID": "8f5038fb-d266-4561-a0a4-3ae295f111e3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should have Filter",
                  "fullTitle": " Page with mixed todos should have Filter",
                  "timedOut": null,
                  "duration": 313,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "filter.assertVisible();",
                  "err": {},
                  "uuid": "d39419ab-9af4-4fd4-a93d-d365cecd3b5e",
                  "parentUUID": "8f5038fb-d266-4561-a0a4-3ae295f111e3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should have todosCounter with a number of not completed todos",
                  "fullTitle": " Page with mixed todos should have todosCounter with a number of not completed todos",
                  "timedOut": null,
                  "duration": 313,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "page.todosCounter().should('have.text', '2 items left');",
                  "err": {},
                  "uuid": "59895357-4dc2-4437-92b6-9a6b182b2b2e",
                  "parentUUID": "8f5038fb-d266-4561-a0a4-3ae295f111e3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should have clearCompletedButton",
                  "fullTitle": " Page with mixed todos should have clearCompletedButton",
                  "timedOut": null,
                  "duration": 290,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "page.clearCompletedButton().should('exist');",
                  "err": {},
                  "uuid": "fd7fa754-da9b-41ed-9698-524974a11dc5",
                  "parentUUID": "8f5038fb-d266-4561-a0a4-3ae295f111e3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should have Filter",
                  "fullTitle": " Page with mixed todos should have Filter",
                  "timedOut": null,
                  "duration": 298,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "filter.assertVisible();",
                  "err": {},
                  "uuid": "3d6fefcb-10e2-4b17-8b5f-d8eb39183a06",
                  "parentUUID": "8f5038fb-d266-4561-a0a4-3ae295f111e3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not show error message",
                  "fullTitle": " Page with mixed todos should not show error message",
                  "timedOut": null,
                  "duration": 304,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "errorMessage.assertHidden();",
                  "err": {},
                  "uuid": "290367da-a38e-4ef6-94cd-d83854969313",
                  "parentUUID": "8f5038fb-d266-4561-a0a4-3ae295f111e3",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d9b4c686-38de-44ae-8200-11ae8e2473c9",
                "98859de2-ffa0-4797-aab2-3aa50a33436c",
                "916de7a2-ef94-4425-9fb8-54bdf957ed30",
                "b735e761-f522-48d3-a382-35721e3413e8",
                "2f4c26ea-f333-4e9a-a0de-42223a7b3405",
                "673a843a-01f9-477f-a0dd-2b619744ba6a",
                "9bdfb228-0105-4293-9f4d-52fdd8f2c298",
                "f5415a35-dba9-4658-a416-c15f51f75590",
                "d39419ab-9af4-4fd4-a93d-d365cecd3b5e",
                "59895357-4dc2-4437-92b6-9a6b182b2b2e",
                "fd7fa754-da9b-41ed-9698-524974a11dc5",
                "3d6fefcb-10e2-4b17-8b5f-d8eb39183a06",
                "290367da-a38e-4ef6-94cd-d83854969313"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4206,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "ea525227-869a-4e4f-b68c-7a3c2e95c3d4",
              "title": "Filtering",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "7b03e8b1-68c6-4b02-80df-19a93316da39",
                  "title": "with mixed todos",
                  "fullFile": "",
                  "file": "",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should have only filterLinkAll active",
                      "fullTitle": " Filtering with mixed todos should have only filterLinkAll active",
                      "timedOut": null,
                      "duration": 349,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "filter.assertSelected('all');\nfilter.assertNotSelected('active');\nfilter.assertNotSelected('completed');",
                      "err": {},
                      "uuid": "bbef0217-4764-4baf-8624-258804732d83",
                      "parentUUID": "7b03e8b1-68c6-4b02-80df-19a93316da39",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should allow to select the active filter",
                      "fullTitle": " Filtering with mixed todos should allow to select the active filter",
                      "timedOut": null,
                      "duration": 401,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "filter.link('active').click();\nfilter.assertNotSelected('all');\nfilter.assertSelected('active');\nfilter.assertNotSelected('completed');",
                      "err": {},
                      "uuid": "b26dbef2-e47a-4314-b0c3-a30604619fb3",
                      "parentUUID": "7b03e8b1-68c6-4b02-80df-19a93316da39",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should show only active todos when active filter is selected",
                      "fullTitle": " Filtering with mixed todos should show only active todos when active filter is selected",
                      "timedOut": null,
                      "duration": 405,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "filter.link('active').click();\ntodos.assertCount(2);\ntodos.assertTitle(0, 'TypeScript');\ntodos.assertTitle(1, 'React');",
                      "err": {},
                      "uuid": "00e1ee52-a155-4f6f-ad14-50009510b581",
                      "parentUUID": "7b03e8b1-68c6-4b02-80df-19a93316da39",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should keep footer when active todos are shown",
                      "fullTitle": " Filtering with mixed todos should keep footer when active todos are shown",
                      "timedOut": null,
                      "duration": 399,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "filter.link('active').click();\npage.todosCounter().should('have.text', '2 items left');\nfilter.assertVisible();\npage.clearCompletedButton().should('exist');",
                      "err": {},
                      "uuid": "af561689-7d9e-463c-8feb-f7346db6a1f8",
                      "parentUUID": "7b03e8b1-68c6-4b02-80df-19a93316da39",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should allow to select the completed filter",
                      "fullTitle": " Filtering with mixed todos should allow to select the completed filter",
                      "timedOut": null,
                      "duration": 393,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "filter.link('completed').click();\nfilter.assertNotSelected('all');\nfilter.assertNotSelected('active');\nfilter.assertSelected('completed');",
                      "err": {},
                      "uuid": "56a88129-241d-4ac3-b9e6-17fc8575bf89",
                      "parentUUID": "7b03e8b1-68c6-4b02-80df-19a93316da39",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should show only completed todos when completed filter is selected",
                      "fullTitle": " Filtering with mixed todos should show only completed todos when completed filter is selected",
                      "timedOut": null,
                      "duration": 415,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "filter.link('completed').click();\ntodos.assertCount(3);\ntodos.assertTitle(0, 'HTML');\ntodos.assertTitle(1, 'CSS');\ntodos.assertTitle(2, 'JS');",
                      "err": {},
                      "uuid": "1bda42b9-4b2e-45d3-9b4b-007f069db97a",
                      "parentUUID": "7b03e8b1-68c6-4b02-80df-19a93316da39",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should keep footer when completed todos are shown",
                      "fullTitle": " Filtering with mixed todos should keep footer when completed todos are shown",
                      "timedOut": null,
                      "duration": 385,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "filter.link('completed').click();\npage.todosCounter().should('have.text', '2 items left');\nfilter.assertVisible();\npage.clearCompletedButton().should('exist');",
                      "err": {},
                      "uuid": "545aa999-1c0e-448b-97f4-a028a19b62a8",
                      "parentUUID": "7b03e8b1-68c6-4b02-80df-19a93316da39",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should allow to reset filter",
                      "fullTitle": " Filtering with mixed todos should allow to reset filter",
                      "timedOut": null,
                      "duration": 475,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "filter.link('completed').click();\nfilter.link('all').click();\ntodos.assertCount(5);\nfilter.assertSelected('all');\nfilter.assertNotSelected('active');\nfilter.assertNotSelected('completed');",
                      "err": {},
                      "uuid": "05501556-5c1b-4ca5-be69-70757837126b",
                      "parentUUID": "7b03e8b1-68c6-4b02-80df-19a93316da39",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "bbef0217-4764-4baf-8624-258804732d83",
                    "b26dbef2-e47a-4314-b0c3-a30604619fb3",
                    "00e1ee52-a155-4f6f-ad14-50009510b581",
                    "af561689-7d9e-463c-8feb-f7346db6a1f8",
                    "56a88129-241d-4ac3-b9e6-17fc8575bf89",
                    "1bda42b9-4b2e-45d3-9b4b-007f069db97a",
                    "545aa999-1c0e-448b-97f4-a028a19b62a8",
                    "05501556-5c1b-4ca5-be69-70757837126b"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 3222,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                },
                {
                  "uuid": "d8a85c54-36f0-459d-bfd6-f847d0539f71",
                  "title": "with active todos only",
                  "fullFile": "",
                  "file": "",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should hide todos on completed selection",
                      "fullTitle": " Filtering with active todos only should hide todos on completed selection",
                      "timedOut": null,
                      "duration": 377,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "filter.link('completed').click();\ntodos.assertCount(0);",
                      "err": {},
                      "uuid": "3b10b4ad-cd62-4e93-92d5-36fe0138a1c7",
                      "parentUUID": "d8a85c54-36f0-459d-bfd6-f847d0539f71",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should keep footer on completed selection",
                      "fullTitle": " Filtering with active todos only should keep footer on completed selection",
                      "timedOut": null,
                      "duration": 394,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "filter.link('completed').click();\nfilter.assertVisible();",
                      "err": {},
                      "uuid": "da5929f6-41be-4e84-bcc5-305949923442",
                      "parentUUID": "d8a85c54-36f0-459d-bfd6-f847d0539f71",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should keep todos counter on completed selection",
                      "fullTitle": " Filtering with active todos only should keep todos counter on completed selection",
                      "timedOut": null,
                      "duration": 427,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "filter.link('completed').click();\npage.todosCounter().should('have.text', '5 items left');",
                      "err": {},
                      "uuid": "5866c5c9-0d20-4576-894c-00a3ba740058",
                      "parentUUID": "d8a85c54-36f0-459d-bfd6-f847d0539f71",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "3b10b4ad-cd62-4e93-92d5-36fe0138a1c7",
                    "da5929f6-41be-4e84-bcc5-305949923442",
                    "5866c5c9-0d20-4576-894c-00a3ba740058"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1198,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                },
                {
                  "uuid": "b15ab304-2d36-4a55-bbdf-9fc7dd05d3fd",
                  "title": "with completed todos only",
                  "fullFile": "",
                  "file": "",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should hide todos on active selection",
                      "fullTitle": " Filtering with completed todos only should hide todos on active selection",
                      "timedOut": null,
                      "duration": 399,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "filter.link('active').click();\ntodos.assertCount(0);",
                      "err": {},
                      "uuid": "dbc58023-6c69-4a70-bf5a-bf83c261ce2b",
                      "parentUUID": "b15ab304-2d36-4a55-bbdf-9fc7dd05d3fd",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should keep footer on active selection",
                      "fullTitle": " Filtering with completed todos only should keep footer on active selection",
                      "timedOut": null,
                      "duration": 410,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "filter.link('active').click();\nfilter.assertVisible();",
                      "err": {},
                      "uuid": "8ef01e38-8a74-42a2-9e49-8ff8da60f8ee",
                      "parentUUID": "b15ab304-2d36-4a55-bbdf-9fc7dd05d3fd",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should keep todos counter on active selection",
                      "fullTitle": " Filtering with completed todos only should keep todos counter on active selection",
                      "timedOut": null,
                      "duration": 378,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "filter.link('active').click();\npage.todosCounter().should('have.text', '0 items left');",
                      "err": {},
                      "uuid": "de83a982-6afb-4003-b2aa-fbee02bebd1f",
                      "parentUUID": "b15ab304-2d36-4a55-bbdf-9fc7dd05d3fd",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "dbc58023-6c69-4a70-bf5a-bf83c261ce2b",
                    "8ef01e38-8a74-42a2-9e49-8ff8da60f8ee",
                    "de83a982-6afb-4003-b2aa-fbee02bebd1f"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1187,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "ec45ce93-335a-4a4e-b8a5-990929b57ec8",
              "title": "Adding a todo",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should focus text field by default",
                  "fullTitle": " Adding a todo should focus text field by default",
                  "timedOut": null,
                  "duration": 327,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "page.newTodoField().should('be.focused');",
                  "err": {},
                  "uuid": "883b2eb3-e8a6-46f7-b4aa-b5d94478c856",
                  "parentUUID": "ec45ce93-335a-4a4e-b8a5-990929b57ec8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [
                {
                  "uuid": "d79b6c1d-ca84-4045-9837-822198e3a80d",
                  "title": "if title is empty",
                  "fullFile": "",
                  "file": "",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should not send a request",
                      "fullTitle": " Adding a todo if title is empty should not send a request",
                      "timedOut": null,
                      "duration": 384,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "cy.get('@createCallback').should('not.be.called');",
                      "err": {},
                      "uuid": "e21621e3-8c83-4724-8f79-8d33e23d15ce",
                      "parentUUID": "d79b6c1d-ca84-4045-9837-822198e3a80d",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should keep text field focused",
                      "fullTitle": " Adding a todo if title is empty should keep text field focused",
                      "timedOut": null,
                      "duration": 377,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.newTodoField().should('be.focused');",
                      "err": {},
                      "uuid": "5769e78d-456d-4377-8bad-b682746c41f7",
                      "parentUUID": "d79b6c1d-ca84-4045-9837-822198e3a80d",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should display an error message",
                      "fullTitle": " Adding a todo if title is empty should display an error message",
                      "timedOut": null,
                      "duration": 366,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "errorMessage.assertVisible();\nerrorMessage.assertText('Title should not be empty');",
                      "err": {},
                      "uuid": "d64cddcb-d4a7-4313-8176-4d6490ad1085",
                      "parentUUID": "d79b6c1d-ca84-4045-9837-822198e3a80d",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should hide an error message after 3 seconds",
                      "fullTitle": " Adding a todo if title is empty should hide an error message after 3 seconds",
                      "timedOut": null,
                      "duration": 3333,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "// just in case\ncy.wait(50);\ncy.clock();\ncy.tick(3000);\nerrorMessage.assertHidden();",
                      "err": {},
                      "uuid": "6e897bba-bad0-47f7-aa54-c6ef4b559394",
                      "parentUUID": "d79b6c1d-ca84-4045-9837-822198e3a80d",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "e21621e3-8c83-4724-8f79-8d33e23d15ce",
                    "5769e78d-456d-4377-8bad-b682746c41f7",
                    "d64cddcb-d4a7-4313-8176-4d6490ad1085",
                    "6e897bba-bad0-47f7-aa54-c6ef4b559394"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 4460,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                },
                {
                  "uuid": "263b5d07-104d-4f6e-9a49-e50bfb3a884d",
                  "title": "if title title has only whitespaces",
                  "fullFile": "",
                  "file": "",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should not send a request",
                      "fullTitle": " Adding a todo if title title has only whitespaces should not send a request",
                      "timedOut": null,
                      "duration": 480,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "cy.get('@createCallback').should('not.be.called');",
                      "err": {},
                      "uuid": "7ae8f8b4-cf41-4daf-b64e-c961130bf5b6",
                      "parentUUID": "263b5d07-104d-4f6e-9a49-e50bfb3a884d",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should keep text field focused",
                      "fullTitle": " Adding a todo if title title has only whitespaces should keep text field focused",
                      "timedOut": null,
                      "duration": 453,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.newTodoField().should('be.focused');",
                      "err": {},
                      "uuid": "0eb10ea2-4fd9-4eb4-82ed-df5cab79d2cb",
                      "parentUUID": "263b5d07-104d-4f6e-9a49-e50bfb3a884d",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should display an error message",
                      "fullTitle": " Adding a todo if title title has only whitespaces should display an error message",
                      "timedOut": null,
                      "duration": 454,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "errorMessage.assertVisible();\nerrorMessage.assertText('Title should not be empty');",
                      "err": {},
                      "uuid": "b6f699a8-5849-4fd9-b9a0-db227e44f50c",
                      "parentUUID": "263b5d07-104d-4f6e-9a49-e50bfb3a884d",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should hide an error message after 3 seconds",
                      "fullTitle": " Adding a todo if title title has only whitespaces should hide an error message after 3 seconds",
                      "timedOut": null,
                      "duration": 3407,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "// just in case\ncy.wait(50);\ncy.clock();\ncy.tick(3000);\nerrorMessage.assertHidden();",
                      "err": {},
                      "uuid": "5330b3c9-8421-4c81-99b4-c125eaa6d8e6",
                      "parentUUID": "263b5d07-104d-4f6e-9a49-e50bfb3a884d",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "7ae8f8b4-cf41-4daf-b64e-c961130bf5b6",
                    "0eb10ea2-4fd9-4eb4-82ed-df5cab79d2cb",
                    "b6f699a8-5849-4fd9-b9a0-db227e44f50c",
                    "5330b3c9-8421-4c81-99b4-c125eaa6d8e6"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 4794,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                },
                {
                  "uuid": "29dcd85f-ca7e-4bb8-bffa-0ced9facea06",
                  "title": "after form submition before response is received",
                  "fullFile": "",
                  "file": "",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should send a create request",
                      "fullTitle": " Adding a todo after form submition before response is received should send a create request",
                      "timedOut": null,
                      "duration": 609,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "cy.tick(1000);\ncy.get('@createCallback').should('have.callCount', 1);",
                      "err": {},
                      "uuid": "c44833fd-ed8e-40ea-8137-c43be1c846dd",
                      "parentUUID": "29dcd85f-ca7e-4bb8-bffa-0ced9facea06",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should disable the input",
                      "fullTitle": " Adding a todo after form submition before response is received should disable the input",
                      "timedOut": null,
                      "duration": 545,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.newTodoField().should('be.disabled');",
                      "err": {},
                      "uuid": "534b6af2-3516-4bed-a50e-929e850bb84b",
                      "parentUUID": "29dcd85f-ca7e-4bb8-bffa-0ced9facea06",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should keep entered text",
                      "fullTitle": " Adding a todo after form submition before response is received should keep entered text",
                      "timedOut": null,
                      "duration": 520,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.newTodoField().should('have.value', 'Test Todo');",
                      "err": {},
                      "uuid": "654152c9-4a64-4b76-9813-e9941c4d4521",
                      "parentUUID": "29dcd85f-ca7e-4bb8-bffa-0ced9facea06",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should create and show a temp TodoItem with Loader",
                      "fullTitle": " Adding a todo after form submition before response is received should create and show a temp TodoItem with Loader",
                      "timedOut": null,
                      "duration": 508,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "todos.assertCount(6);\ntodos.assertLoading(5);",
                      "err": {},
                      "uuid": "b86dfc07-2f82-4a1f-81eb-51844d0f13e1",
                      "parentUUID": "29dcd85f-ca7e-4bb8-bffa-0ced9facea06",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should show a temp TodoItem with correct title",
                      "fullTitle": " Adding a todo after form submition before response is received should show a temp TodoItem with correct title",
                      "timedOut": null,
                      "duration": 499,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "todos.assertTitle(5, 'Test Todo');",
                      "err": {},
                      "uuid": "c68b4b72-67a6-49fe-9682-2edf9c4d3e3b",
                      "parentUUID": "29dcd85f-ca7e-4bb8-bffa-0ced9facea06",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should show a not completed temp TodoItem",
                      "fullTitle": " Adding a todo after form submition before response is received should show a not completed temp TodoItem",
                      "timedOut": null,
                      "duration": 518,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "todos.assertNotCompleted(5);",
                      "err": {},
                      "uuid": "cb4ba91d-8130-4338-b21d-a59323f03da1",
                      "parentUUID": "29dcd85f-ca7e-4bb8-bffa-0ced9facea06",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should not show loaders for existing todos",
                      "fullTitle": " Adding a todo after form submition before response is received should not show loaders for existing todos",
                      "timedOut": null,
                      "duration": 557,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "todos.assertNotLoading(0);\ntodos.assertNotLoading(1);\ntodos.assertNotLoading(2);\ntodos.assertNotLoading(3);\ntodos.assertNotLoading(4);",
                      "err": {},
                      "uuid": "6441d485-1280-4daf-90a5-ce4134bfd03b",
                      "parentUUID": "29dcd85f-ca7e-4bb8-bffa-0ced9facea06",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should not update active counter",
                      "fullTitle": " Adding a todo after form submition before response is received should not update active counter",
                      "timedOut": null,
                      "duration": 517,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.todosCounter().should('have.text', '2 items left');",
                      "err": {},
                      "uuid": "c501a74e-84fd-4faf-9581-8995ad374eea",
                      "parentUUID": "29dcd85f-ca7e-4bb8-bffa-0ced9facea06",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "c44833fd-ed8e-40ea-8137-c43be1c846dd",
                    "534b6af2-3516-4bed-a50e-929e850bb84b",
                    "654152c9-4a64-4b76-9813-e9941c4d4521",
                    "b86dfc07-2f82-4a1f-81eb-51844d0f13e1",
                    "c68b4b72-67a6-49fe-9682-2edf9c4d3e3b",
                    "cb4ba91d-8130-4338-b21d-a59323f03da1",
                    "6441d485-1280-4daf-90a5-ce4134bfd03b",
                    "c501a74e-84fd-4faf-9581-8995ad374eea"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 4273,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                },
                {
                  "uuid": "4d18c708-ec5f-4d7d-82fc-24aeabc31b3d",
                  "title": "on success response",
                  "fullFile": "",
                  "file": "",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should add trimmed title",
                      "fullTitle": " Adding a todo on success response should add trimmed title",
                      "timedOut": null,
                      "duration": 771,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.mockCreate().as('createRequest');\npage.newTodoField().type('  Other Title    {enter}');\ncy.wait('@createRequest');\n// just in case\npage.flushJSTimers();\ntodos.assertTitle(5, 'Other Title');",
                      "err": {},
                      "uuid": "0b731f96-085a-4d8e-a545-976576986927",
                      "parentUUID": "4d18c708-ec5f-4d7d-82fc-24aeabc31b3d",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should keep current filter",
                      "fullTitle": " Adding a todo on success response should keep current filter",
                      "timedOut": null,
                      "duration": 814,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.mockCreate().as('createRequest');\nfilter.link('active').click();\npage.newTodoField().type('Test Todo{enter}');\ncy.wait('@createRequest');\nfilter.assertSelected('active');",
                      "err": {},
                      "uuid": "a1c99e34-d9ee-4407-8546-9060e0186c1d",
                      "parentUUID": "4d18c708-ec5f-4d7d-82fc-24aeabc31b3d",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [
                    {
                      "uuid": "5c90e6fd-2a8c-4f8c-a8f9-f6a83e5b177e",
                      "title": "",
                      "fullFile": "",
                      "file": "",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "should replace loader with a created todo",
                          "fullTitle": " Adding a todo on success response  should replace loader with a created todo",
                          "timedOut": null,
                          "duration": 0,
                          "state": "pending",
                          "speed": null,
                          "pass": false,
                          "fail": false,
                          "pending": true,
                          "context": null,
                          "code": "page.flushJSTimers();\ntodos.assertCount(6);\ntodos.assertNotLoading(5);",
                          "err": {},
                          "uuid": "631d145f-ebb2-49b6-9d8a-a80bc2d2d8ec",
                          "parentUUID": "5c90e6fd-2a8c-4f8c-a8f9-f6a83e5b177e",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "should add a todo with a correct title",
                          "fullTitle": " Adding a todo on success response  should add a todo with a correct title",
                          "timedOut": null,
                          "duration": 654,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "todos.assertTitle(5, 'Test Todo');",
                          "err": {},
                          "uuid": "6d1df94d-5562-4566-beb9-983eaf8fb75e",
                          "parentUUID": "5c90e6fd-2a8c-4f8c-a8f9-f6a83e5b177e",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "should add a not completed todo",
                          "fullTitle": " Adding a todo on success response  should add a not completed todo",
                          "timedOut": null,
                          "duration": 592,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "todos.assertNotCompleted(5);",
                          "err": {},
                          "uuid": "65a0ef5a-0bc8-49ad-b792-9380c88eb28f",
                          "parentUUID": "5c90e6fd-2a8c-4f8c-a8f9-f6a83e5b177e",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "should update active counter",
                          "fullTitle": " Adding a todo on success response  should update active counter",
                          "timedOut": null,
                          "duration": 600,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "page.todosCounter().should('have.text', '3 items left');",
                          "err": {},
                          "uuid": "13b79f2d-3d98-40ec-a24f-21b9f6dd6aec",
                          "parentUUID": "5c90e6fd-2a8c-4f8c-a8f9-f6a83e5b177e",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "should enable the text field",
                          "fullTitle": " Adding a todo on success response  should enable the text field",
                          "timedOut": null,
                          "duration": 581,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "page.newTodoField().should('not.be.disabled');",
                          "err": {},
                          "uuid": "420580ab-1620-4a82-8a53-e294f8b9b691",
                          "parentUUID": "5c90e6fd-2a8c-4f8c-a8f9-f6a83e5b177e",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "should not show error message",
                          "fullTitle": " Adding a todo on success response  should not show error message",
                          "timedOut": null,
                          "duration": 554,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "errorMessage.assertHidden();",
                          "err": {},
                          "uuid": "47832120-d1cc-4ff9-90e6-252e9034d6b1",
                          "parentUUID": "5c90e6fd-2a8c-4f8c-a8f9-f6a83e5b177e",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "should clear text field",
                          "fullTitle": " Adding a todo on success response  should clear text field",
                          "timedOut": null,
                          "duration": 586,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "page.newTodoField().should('have.value', '');",
                          "err": {},
                          "uuid": "9958a235-7b20-4bc2-a529-06e87b7e1e2f",
                          "parentUUID": "5c90e6fd-2a8c-4f8c-a8f9-f6a83e5b177e",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "should focus text field",
                          "fullTitle": " Adding a todo on success response  should focus text field",
                          "timedOut": null,
                          "duration": 587,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "page.newTodoField().should('be.focused');",
                          "err": {},
                          "uuid": "7b3ce638-aea6-4b56-a71c-1af4bbb232ef",
                          "parentUUID": "5c90e6fd-2a8c-4f8c-a8f9-f6a83e5b177e",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "should allow to add one more todo",
                          "fullTitle": " Adding a todo on success response  should allow to add one more todo",
                          "timedOut": null,
                          "duration": 1004,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "page.mockCreate().as('createRequest2');\npage.newTodoField().type('Hello world{enter}');\ncy.wait('@createRequest2');\npage.flushJSTimers();\ntodos.assertCount(7);\n// todos.assertNotLoading(6);\ntodos.assertNotCompleted(6);\ntodos.assertTitle(6, 'Hello world');\npage.todosCounter().should('have.text', '4 items left');",
                          "err": {},
                          "uuid": "f544008c-c895-4437-a755-cf1b9f26caa2",
                          "parentUUID": "5c90e6fd-2a8c-4f8c-a8f9-f6a83e5b177e",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "6d1df94d-5562-4566-beb9-983eaf8fb75e",
                        "65a0ef5a-0bc8-49ad-b792-9380c88eb28f",
                        "13b79f2d-3d98-40ec-a24f-21b9f6dd6aec",
                        "420580ab-1620-4a82-8a53-e294f8b9b691",
                        "47832120-d1cc-4ff9-90e6-252e9034d6b1",
                        "9958a235-7b20-4bc2-a529-06e87b7e1e2f",
                        "7b3ce638-aea6-4b56-a71c-1af4bbb232ef",
                        "f544008c-c895-4437-a755-cf1b9f26caa2"
                      ],
                      "failures": [],
                      "pending": [
                        "631d145f-ebb2-49b6-9d8a-a80bc2d2d8ec"
                      ],
                      "skipped": [],
                      "duration": 5158,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 2000
                    }
                  ],
                  "passes": [
                    "0b731f96-085a-4d8e-a545-976576986927",
                    "a1c99e34-d9ee-4407-8546-9060e0186c1d"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1585,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                },
                {
                  "uuid": "04e77529-da68-42f2-a8e3-7194f535f205",
                  "title": "on request fail",
                  "fullFile": "",
                  "file": "",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should show an error message",
                      "fullTitle": " Adding a todo on request fail should show an error message",
                      "timedOut": null,
                      "duration": 589,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "errorMessage.assertVisible();\nerrorMessage.assertText('Unable to add a todo');",
                      "err": {},
                      "uuid": "4b443b3d-4740-4856-90b2-e74d494fe91a",
                      "parentUUID": "04e77529-da68-42f2-a8e3-7194f535f205",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should hide an error message in 3 seconds",
                      "fullTitle": " Adding a todo on request fail should hide an error message in 3 seconds",
                      "timedOut": null,
                      "duration": 3626,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "// just in case\ncy.wait(50);\ncy.clock();\ncy.tick(2500);\nerrorMessage.assertVisible();\ncy.tick(500);\nerrorMessage.assertHidden();",
                      "err": {},
                      "uuid": "70fca155-62e2-48ef-9f7f-71cc3969e89f",
                      "parentUUID": "04e77529-da68-42f2-a8e3-7194f535f205",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should remove a temp TodoItem on request fail",
                      "fullTitle": " Adding a todo on request fail should remove a temp TodoItem on request fail",
                      "timedOut": null,
                      "duration": 706,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "todos.assertCount(5);\ntodos.assertTitle(4, 'React');",
                      "err": {},
                      "uuid": "11a3bab3-0a2d-44c0-a03e-89f4f92b80f0",
                      "parentUUID": "04e77529-da68-42f2-a8e3-7194f535f205",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should enable the text field on request fail",
                      "fullTitle": " Adding a todo on request fail should enable the text field on request fail",
                      "timedOut": null,
                      "duration": 624,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.newTodoField().should('not.be.disabled');",
                      "err": {},
                      "uuid": "102f9b87-4a87-4e73-a668-d97c7c282d0c",
                      "parentUUID": "04e77529-da68-42f2-a8e3-7194f535f205",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should keep the entered text on request fail",
                      "fullTitle": " Adding a todo on request fail should keep the entered text on request fail",
                      "timedOut": null,
                      "duration": 594,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.newTodoField().should('have.value', 'Test Todo');",
                      "err": {},
                      "uuid": "ae15af3e-43bd-4cd2-bd7e-2fbd29044e63",
                      "parentUUID": "04e77529-da68-42f2-a8e3-7194f535f205",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should focus text field",
                      "fullTitle": " Adding a todo on request fail should focus text field",
                      "timedOut": null,
                      "duration": 609,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.newTodoField().should('be.focused');",
                      "err": {},
                      "uuid": "e554fedc-74f8-4d4f-a84a-ddefb423979e",
                      "parentUUID": "04e77529-da68-42f2-a8e3-7194f535f205",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should not update active counter",
                      "fullTitle": " Adding a todo on request fail should not update active counter",
                      "timedOut": null,
                      "duration": 585,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.todosCounter().should('have.text', '2 items left');",
                      "err": {},
                      "uuid": "1479f9c4-a65b-48b5-94af-61b0499baa60",
                      "parentUUID": "04e77529-da68-42f2-a8e3-7194f535f205",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should immediately hide an error message on new request",
                      "fullTitle": " Adding a todo on request fail should immediately hide an error message on new request",
                      "timedOut": null,
                      "duration": 3742,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.newTodoField().type(`{enter}`);\nerrorMessage.assertHidden();",
                      "err": {},
                      "uuid": "bd8f1782-8a2f-43c6-83aa-eaf8af2f86f5",
                      "parentUUID": "04e77529-da68-42f2-a8e3-7194f535f205",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should show an error message again on a next fail",
                      "fullTitle": " Adding a todo on request fail should show an error message again on a next fail",
                      "timedOut": null,
                      "duration": 752,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "// to prevent Cypress from failing the test on uncaught exception\ncy.once('uncaught:exception', () => false);\npage.mockCreate({\n  statusCode: 503,\n  body: 'Service Unavailable'\n}).as('createRequest2');\npage.newTodoField().type(`{enter}`);\ncy.wait('@createRequest2');\nerrorMessage.assertVisible();",
                      "err": {},
                      "uuid": "33519675-ac39-4f00-99ff-0b6b93cb03ea",
                      "parentUUID": "04e77529-da68-42f2-a8e3-7194f535f205",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should keep an error message for 3s after the last fail",
                      "fullTitle": " Adding a todo on request fail should keep an error message for 3s after the last fail",
                      "timedOut": null,
                      "duration": 758,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "// to prevent Cypress from failing the test on uncaught exception\ncy.once('uncaught:exception', () => false);\npage.mockCreate({\n  statusCode: 503,\n  body: 'Service Unavailable'\n}).as('createRequest2');\ncy.clock();\ncy.tick(2000);\npage.newTodoField().type(`{enter}`);\ncy.tick(500);\ncy.wait('@createRequest2');\ncy.tick(2000);\nerrorMessage.assertVisible();",
                      "err": {},
                      "uuid": "c6c8a706-2d94-4018-9403-4e811f312ede",
                      "parentUUID": "04e77529-da68-42f2-a8e3-7194f535f205",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should allow to add a todo",
                      "fullTitle": " Adding a todo on request fail should allow to add a todo",
                      "timedOut": null,
                      "duration": 922,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.mockCreate().as('createRequest2');\npage.newTodoField().type('{enter}');\ncy.wait('@createRequest2');\npage.flushJSTimers();\ntodos.assertCount(6);\n// todos.assertNotLoading(5);\ntodos.assertNotCompleted(5);\ntodos.assertTitle(5, 'Test Todo');\npage.todosCounter().should('have.text', '3 items left');",
                      "err": {},
                      "uuid": "72a90fde-8837-4014-8932-0cadca646c63",
                      "parentUUID": "04e77529-da68-42f2-a8e3-7194f535f205",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "4b443b3d-4740-4856-90b2-e74d494fe91a",
                    "70fca155-62e2-48ef-9f7f-71cc3969e89f",
                    "11a3bab3-0a2d-44c0-a03e-89f4f92b80f0",
                    "102f9b87-4a87-4e73-a668-d97c7c282d0c",
                    "ae15af3e-43bd-4cd2-bd7e-2fbd29044e63",
                    "e554fedc-74f8-4d4f-a84a-ddefb423979e",
                    "1479f9c4-a65b-48b5-94af-61b0499baa60",
                    "bd8f1782-8a2f-43c6-83aa-eaf8af2f86f5",
                    "33519675-ac39-4f00-99ff-0b6b93cb03ea",
                    "c6c8a706-2d94-4018-9403-4e811f312ede",
                    "72a90fde-8837-4014-8932-0cadca646c63"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 13507,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                }
              ],
              "passes": [
                "883b2eb3-e8a6-46f7-b4aa-b5d94478c856"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 327,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "f4635355-8267-4526-9eaf-4eaeba1fb9a3",
              "title": "Adding a first todo",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should show a new todos",
                  "fullTitle": " Adding a first todo should show a new todos",
                  "timedOut": null,
                  "duration": 640,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "todos.assertCount(1);\ntodos.assertTitle(0, 'First todo');\ntodos.assertNotCompleted(0);",
                  "err": {},
                  "uuid": "312a155c-333e-4378-82c5-5c620a6ce56f",
                  "parentUUID": "f4635355-8267-4526-9eaf-4eaeba1fb9a3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should show Filter",
                  "fullTitle": " Adding a first todo should show Filter",
                  "timedOut": null,
                  "duration": 576,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "filter.assertVisible();",
                  "err": {},
                  "uuid": "4c951bc1-65e1-41e6-ac23-3b4b2621e8f4",
                  "parentUUID": "f4635355-8267-4526-9eaf-4eaeba1fb9a3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should show todosCounter",
                  "fullTitle": " Adding a first todo should show todosCounter",
                  "timedOut": null,
                  "duration": 604,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "page.todosCounter().should('contain.text', '1 item');",
                  "err": {},
                  "uuid": "bd8cfa3b-ce76-41eb-ac6d-06b8ccfb23fd",
                  "parentUUID": "f4635355-8267-4526-9eaf-4eaeba1fb9a3",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "312a155c-333e-4378-82c5-5c620a6ce56f",
                "4c951bc1-65e1-41e6-ac23-3b4b2621e8f4",
                "bd8cfa3b-ce76-41eb-ac6d-06b8ccfb23fd"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1820,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "7a16deac-be98-4bce-8913-f69f7d9006cc",
              "title": "Individual Todo Deletion",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "3a6c855b-5378-4383-b8f0-20b9031726ab",
                  "title": "Default behavior",
                  "fullFile": "",
                  "file": "",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should display a loader on the todo when the TodoDeleteButton is clicked",
                      "fullTitle": " Individual Todo Deletion Default behavior should display a loader on the todo when the TodoDeleteButton is clicked",
                      "timedOut": null,
                      "duration": 421,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.mockDelete(257334);\npage.pauseTimers();\ntodos.deleteButton(0).click();\ntodos.assertLoading(0);",
                      "err": {},
                      "uuid": "201e9b16-2470-425b-8d18-4f2670d004aa",
                      "parentUUID": "3a6c855b-5378-4383-b8f0-20b9031726ab",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should not delete a todo before successful response",
                      "fullTitle": " Individual Todo Deletion Default behavior should not delete a todo before successful response",
                      "timedOut": null,
                      "duration": 393,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.mockDelete(257334);\npage.pauseTimers();\ntodos.deleteButton(0).click();\ntodos.assertCount(5);",
                      "err": {},
                      "uuid": "8e7eb22a-a3a0-419f-b508-26166b51c77d",
                      "parentUUID": "3a6c855b-5378-4383-b8f0-20b9031726ab",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should remove the todo from the list on a successful API response",
                      "fullTitle": " Individual Todo Deletion Default behavior should remove the todo from the list on a successful API response",
                      "timedOut": null,
                      "duration": 479,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.mockDelete(257334).as('deleteRequest');\ntodos.deleteButton(0).click();\ncy.wait('@deleteRequest');\ntodos.assertCount(4);\ntodos.assertTitle(0, 'CSS');",
                      "err": {},
                      "uuid": "7b917ea1-de0c-49fc-bdc7-9b0656be4e39",
                      "parentUUID": "3a6c855b-5378-4383-b8f0-20b9031726ab",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should focus text field after todo deletion",
                      "fullTitle": " Individual Todo Deletion Default behavior should focus text field after todo deletion",
                      "timedOut": null,
                      "duration": 500,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.mockDelete(257334).as('deleteRequest');\ntodos.deleteButton(0).click();\ncy.wait('@deleteRequest');\npage.newTodoField().should('be.focused');",
                      "err": {},
                      "uuid": "3b3a649a-d6e1-4e8f-9320-ce5ef6c6dc6b",
                      "parentUUID": "3a6c855b-5378-4383-b8f0-20b9031726ab",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should not remove the todo from the list on an API error",
                      "fullTitle": " Individual Todo Deletion Default behavior should not remove the todo from the list on an API error",
                      "timedOut": null,
                      "duration": 519,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "// to prevent Cypress from failing the test on uncaught exception\ncy.once('uncaught:exception', () => false);\npage.mockDelete(257334, {\n  statusCode: 500,\n  body: 'Internal Server Error'\n}).as('deleteRequest');\ntodos.deleteButton(0).click();\ncy.wait('@deleteRequest');\ntodos.assertCount(5);\ntodos.assertTitle(0, 'HTML');",
                      "err": {},
                      "uuid": "8994e3e6-9f50-4793-a703-816d22cc7812",
                      "parentUUID": "3a6c855b-5378-4383-b8f0-20b9031726ab",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should show an error message on an API error",
                      "fullTitle": " Individual Todo Deletion Default behavior should show an error message on an API error",
                      "timedOut": null,
                      "duration": 478,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "// to prevent Cypress from failing the test on uncaught exception\ncy.once('uncaught:exception', () => false);\npage.mockDelete(257334, {\n  statusCode: 500,\n  body: 'Internal Server Error'\n}).as('deleteRequest');\ntodos.deleteButton(0).click();\ncy.wait('@deleteRequest');\nerrorMessage.assertVisible();\nerrorMessage.assertText('Unable to delete a todo');",
                      "err": {},
                      "uuid": "62504953-9332-476e-8b26-566a4665019d",
                      "parentUUID": "3a6c855b-5378-4383-b8f0-20b9031726ab",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should adjust the active todo count correctly after successful deletion",
                      "fullTitle": " Individual Todo Deletion Default behavior should adjust the active todo count correctly after successful deletion",
                      "timedOut": null,
                      "duration": 467,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.mockDelete(257338).as('deleteRequest');\ntodos.deleteButton(4).click();\ncy.wait('@deleteRequest');\npage.todosCounter().should('contain.text', '1 item');",
                      "err": {},
                      "uuid": "09757c08-24a8-4839-bae7-3a8d4bbc1961",
                      "parentUUID": "3a6c855b-5378-4383-b8f0-20b9031726ab",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should not adjust the active todo count after failed deletion",
                      "fullTitle": " Individual Todo Deletion Default behavior should not adjust the active todo count after failed deletion",
                      "timedOut": null,
                      "duration": 464,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "// to prevent Cypress from failing the test on uncaught exception\ncy.once('uncaught:exception', () => false);\npage.mockDelete(257338, {\n  statusCode: 500,\n  body: 'Internal Server Error'\n}).as('deleteRequest');\ntodos.deleteButton(4).click();\ncy.wait('@deleteRequest');\npage.todosCounter().should('have.text', '2 items left');",
                      "err": {},
                      "uuid": "ca2fdcbd-4073-4fca-a3d2-6e220a4d9df1",
                      "parentUUID": "3a6c855b-5378-4383-b8f0-20b9031726ab",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "201e9b16-2470-425b-8d18-4f2670d004aa",
                    "8e7eb22a-a3a0-419f-b508-26166b51c77d",
                    "7b917ea1-de0c-49fc-bdc7-9b0656be4e39",
                    "3b3a649a-d6e1-4e8f-9320-ce5ef6c6dc6b",
                    "8994e3e6-9f50-4793-a703-816d22cc7812",
                    "62504953-9332-476e-8b26-566a4665019d",
                    "09757c08-24a8-4839-bae7-3a8d4bbc1961",
                    "ca2fdcbd-4073-4fca-a3d2-6e220a4d9df1"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 3721,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                },
                {
                  "uuid": "35b9067a-4be3-493f-9911-090cddbaee2a",
                  "title": "Last todo deletion",
                  "fullFile": "",
                  "file": "",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should hide todos",
                      "fullTitle": " Individual Todo Deletion Last todo deletion should hide todos",
                      "timedOut": null,
                      "duration": 467,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "todos.assertCount(0);",
                      "err": {},
                      "uuid": "b461a7cd-d54e-4d44-9d46-9d2f374b2188",
                      "parentUUID": "35b9067a-4be3-493f-9911-090cddbaee2a",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should hide footer",
                      "fullTitle": " Individual Todo Deletion Last todo deletion should hide footer",
                      "timedOut": null,
                      "duration": 468,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "filter.assertHidden();\npage.clearCompletedButton().should('not.exist');\npage.todosCounter().should('not.exist');",
                      "err": {},
                      "uuid": "dac79cdd-b0ae-4b70-a231-c2dc1e39420e",
                      "parentUUID": "35b9067a-4be3-493f-9911-090cddbaee2a",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should focus text field after todo deletion",
                      "fullTitle": " Individual Todo Deletion Last todo deletion should focus text field after todo deletion",
                      "timedOut": null,
                      "duration": 460,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.newTodoField().should('be.focused');",
                      "err": {},
                      "uuid": "a2726fab-14a3-4fed-a8be-0c3078cb4c4d",
                      "parentUUID": "35b9067a-4be3-493f-9911-090cddbaee2a",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "b461a7cd-d54e-4d44-9d46-9d2f374b2188",
                    "dac79cdd-b0ae-4b70-a231-c2dc1e39420e",
                    "a2726fab-14a3-4fed-a8be-0c3078cb4c4d"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1395,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "3f1d560a-ff8f-4bee-9bb5-2971aad319a8",
              "title": "Group Todo Deletion",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "7c84c1e0-a4eb-4420-ba79-fe7b18396318",
                  "title": "with no completed todos",
                  "fullFile": "",
                  "file": "",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should not have active ClearCompleted button",
                      "fullTitle": " Group Todo Deletion with no completed todos should not have active ClearCompleted button",
                      "timedOut": null,
                      "duration": 360,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.clearCompletedButton().should('be.disabled');",
                      "err": {},
                      "uuid": "697b2a7a-8446-4373-a960-d115efe22f9c",
                      "parentUUID": "7c84c1e0-a4eb-4420-ba79-fe7b18396318",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "697b2a7a-8446-4373-a960-d115efe22f9c"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 360,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                },
                {
                  "uuid": "6daf2028-6372-41f2-bbf6-4ce4a3e26c6d",
                  "title": "with some completed todos",
                  "fullFile": "",
                  "file": "",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should have ClearCompleted button enabled",
                      "fullTitle": " Group Todo Deletion with some completed todos should have ClearCompleted button enabled",
                      "timedOut": null,
                      "duration": 310,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.clearCompletedButton().should('not.be.disabled');",
                      "err": {},
                      "uuid": "6ccbc11b-9e70-44b0-aa44-b50e12d9a29a",
                      "parentUUID": "6daf2028-6372-41f2-bbf6-4ce4a3e26c6d",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should send individual deletion request for each completed todo",
                      "fullTitle": " Group Todo Deletion with some completed todos should send individual deletion request for each completed todo",
                      "timedOut": null,
                      "duration": 487,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.mockDelete(257334).as('deleteRequest1');\npage.mockDelete(257335).as('deleteRequest2');\npage.mockDelete(257336).as('deleteRequest3');\npage.clearCompletedButton().click();\ncy.wait('@deleteRequest1');\ncy.wait('@deleteRequest2');\ncy.wait('@deleteRequest3');",
                      "err": {},
                      "uuid": "74a25141-5392-493b-97ee-0b1e8a51b442",
                      "parentUUID": "6daf2028-6372-41f2-bbf6-4ce4a3e26c6d",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [
                    {
                      "uuid": "8f496700-e52d-4446-9855-69a2b57c2bd6",
                      "title": "on success",
                      "fullFile": "",
                      "file": "",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "should remove all completed todos from the list",
                          "fullTitle": " Group Todo Deletion with some completed todos on success should remove all completed todos from the list",
                          "timedOut": null,
                          "duration": 538,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "todos.assertCount(2);\ntodos.assertTitle(0, 'TypeScript');\ntodos.assertTitle(1, 'React');",
                          "err": {},
                          "uuid": "2d51bd8d-75b4-420a-96d3-9c58b1201815",
                          "parentUUID": "8f496700-e52d-4446-9855-69a2b57c2bd6",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "should disable ClearCompleted button",
                          "fullTitle": " Group Todo Deletion with some completed todos on success should disable ClearCompleted button",
                          "timedOut": null,
                          "duration": 519,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "page.clearCompletedButton().should('be.disabled');",
                          "err": {},
                          "uuid": "7aadfd1d-9d4d-4c6b-afeb-f70920e99529",
                          "parentUUID": "8f496700-e52d-4446-9855-69a2b57c2bd6",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "should focus the text field",
                          "fullTitle": " Group Todo Deletion with some completed todos on success should focus the text field",
                          "timedOut": null,
                          "duration": 506,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "page.newTodoField().should('be.focused');",
                          "err": {},
                          "uuid": "6276c9ea-1249-4182-89ed-b51c8baf7fb4",
                          "parentUUID": "8f496700-e52d-4446-9855-69a2b57c2bd6",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "2d51bd8d-75b4-420a-96d3-9c58b1201815",
                        "7aadfd1d-9d4d-4c6b-afeb-f70920e99529",
                        "6276c9ea-1249-4182-89ed-b51c8baf7fb4"
                      ],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 1563,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 2000
                    },
                    {
                      "uuid": "54ddd7c5-f03c-489c-a8d0-f62f0a3c0f20",
                      "title": "on a single fail",
                      "fullFile": "",
                      "file": "",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "should show an error message if any of the group deletions fails",
                          "fullTitle": " Group Todo Deletion with some completed todos on a single fail should show an error message if any of the group deletions fails",
                          "timedOut": null,
                          "duration": 506,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "errorMessage.assertVisible();\nerrorMessage.assertText('Unable to delete a todo');",
                          "err": {},
                          "uuid": "f160b0b8-920a-4ba0-8a00-3cfe50844c5c",
                          "parentUUID": "54ddd7c5-f03c-489c-a8d0-f62f0a3c0f20",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "should remove todos with success responses and keep todos with errors",
                          "fullTitle": " Group Todo Deletion with some completed todos on a single fail should remove todos with success responses and keep todos with errors",
                          "timedOut": null,
                          "duration": 546,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "todos.assertCount(3);\ntodos.assertTitle(0, 'CSS');\ntodos.assertTitle(1, 'TypeScript');",
                          "err": {},
                          "uuid": "23a12402-6ede-4ab1-bd35-70c4c2a17c1e",
                          "parentUUID": "54ddd7c5-f03c-489c-a8d0-f62f0a3c0f20",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "should not disable ClearCompleted button",
                          "fullTitle": " Group Todo Deletion with some completed todos on a single fail should not disable ClearCompleted button",
                          "timedOut": null,
                          "duration": 508,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "page.clearCompletedButton().should('not.be.disabled');",
                          "err": {},
                          "uuid": "c6441023-93ba-4d41-92d5-45d11e67397f",
                          "parentUUID": "54ddd7c5-f03c-489c-a8d0-f62f0a3c0f20",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "f160b0b8-920a-4ba0-8a00-3cfe50844c5c",
                        "23a12402-6ede-4ab1-bd35-70c4c2a17c1e",
                        "c6441023-93ba-4d41-92d5-45d11e67397f"
                      ],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 1560,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 2000
                    }
                  ],
                  "passes": [
                    "6ccbc11b-9e70-44b0-aa44-b50e12d9a29a",
                    "74a25141-5392-493b-97ee-0b1e8a51b442"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 797,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                },
                {
                  "uuid": "8e772575-32d5-48c3-910c-6b345bc09826",
                  "title": "with all todos completed",
                  "fullFile": "",
                  "file": "",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should hide todos after clearing all completed todos",
                      "fullTitle": " Group Todo Deletion with all todos completed should hide todos after clearing all completed todos",
                      "timedOut": null,
                      "duration": 537,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "todos.assertCount(0);",
                      "err": {},
                      "uuid": "536227de-c3d6-4437-8aea-87ac9a1034c5",
                      "parentUUID": "8e772575-32d5-48c3-910c-6b345bc09826",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should hide footer after clearing all completed todos",
                      "fullTitle": " Group Todo Deletion with all todos completed should hide footer after clearing all completed todos",
                      "timedOut": null,
                      "duration": 519,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "filter.assertHidden();\npage.clearCompletedButton().should('not.exist');\npage.todosCounter().should('not.exist');",
                      "err": {},
                      "uuid": "6cf03b3b-6e73-4117-ab75-3be9e56fc7e4",
                      "parentUUID": "8e772575-32d5-48c3-910c-6b345bc09826",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "536227de-c3d6-4437-8aea-87ac9a1034c5",
                    "6cf03b3b-6e73-4117-ab75-3be9e56fc7e4"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1056,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "88fc998f-dde7-49c6-bf7c-a42e398910cf",
              "title": "Todo Toggling",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "870f10ec-4d68-43cd-aee3-384ef0a70045",
                  "title": "before receving response",
                  "fullFile": "",
                  "file": "",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should send an update request",
                      "fullTitle": " Todo Toggling before receving response should send an update request",
                      "timedOut": null,
                      "duration": 465,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "todos.statusToggler(0).click();\ncy.wait('@updateRequest');",
                      "err": {},
                      "uuid": "64975ce5-4f95-468c-9969-f1c774c36265",
                      "parentUUID": "870f10ec-4d68-43cd-aee3-384ef0a70045",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should show loader after click",
                      "fullTitle": " Todo Toggling before receving response should show loader after click",
                      "timedOut": null,
                      "duration": 412,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.pauseTimers();\ntodos.statusToggler(0).click();\ntodos.assertLoading(0);",
                      "err": {},
                      "uuid": "07cb7c72-aea5-47e9-8959-b0a4fec1ef4f",
                      "parentUUID": "870f10ec-4d68-43cd-aee3-384ef0a70045",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should not show error message after click",
                      "fullTitle": " Todo Toggling before receving response should not show error message after click",
                      "timedOut": null,
                      "duration": 395,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.pauseTimers();\ntodos.statusToggler(0).click();\nerrorMessage.assertHidden();",
                      "err": {},
                      "uuid": "f6216142-029f-42d3-9037-b730aeaeff29",
                      "parentUUID": "870f10ec-4d68-43cd-aee3-384ef0a70045",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should not hide a todo if filtered",
                      "fullTitle": " Todo Toggling before receving response should not hide a todo if filtered",
                      "timedOut": null,
                      "duration": 499,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "filter.link('completed').click();\npage.pauseTimers();\ncy.tick(1000); // flush JS animation\ntodos.statusToggler(0).click();\ntodos.assertCount(3);\ntodos.assertTitle(0, 'HTML');",
                      "err": {},
                      "uuid": "2146b2d0-fa10-4db6-a3d0-edd15a7ac1f8",
                      "parentUUID": "870f10ec-4d68-43cd-aee3-384ef0a70045",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "64975ce5-4f95-468c-9969-f1c774c36265",
                    "07cb7c72-aea5-47e9-8959-b0a4fec1ef4f",
                    "f6216142-029f-42d3-9037-b730aeaeff29",
                    "2146b2d0-fa10-4db6-a3d0-edd15a7ac1f8"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1771,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                },
                {
                  "uuid": "26253d9e-ac72-4a4e-822d-906dae2221f3",
                  "title": "on success",
                  "fullFile": "",
                  "file": "",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should toggle a todo",
                      "fullTitle": " Todo Toggling on success should toggle a todo",
                      "timedOut": null,
                      "duration": 503,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "todos.assertNotCompleted(0);\ntodos.statusToggler(0).should('not.be.checked');",
                      "err": {},
                      "uuid": "04352095-9e26-4592-b789-ef164b81f38c",
                      "parentUUID": "26253d9e-ac72-4a4e-822d-906dae2221f3",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should cancel loading",
                      "fullTitle": " Todo Toggling on success should cancel loading",
                      "timedOut": null,
                      "duration": 516,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.flushJSTimers();\ntodos.assertNotLoading(0);",
                      "err": {},
                      "uuid": "e9284b0c-bc55-455a-a3c3-7607c40dd732",
                      "parentUUID": "26253d9e-ac72-4a4e-822d-906dae2221f3",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should update the counter",
                      "fullTitle": " Todo Toggling on success should update the counter",
                      "timedOut": null,
                      "duration": 478,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.todosCounter().should('have.text', '3 items left');",
                      "err": {},
                      "uuid": "2dfa6c42-fbca-4324-8039-d19b4bd07090",
                      "parentUUID": "26253d9e-ac72-4a4e-822d-906dae2221f3",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should not show an error message",
                      "fullTitle": " Todo Toggling on success should not show an error message",
                      "timedOut": null,
                      "duration": 479,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "errorMessage.assertHidden();",
                      "err": {},
                      "uuid": "54b07089-26c6-4d8d-a183-1ba7c9e73aa1",
                      "parentUUID": "26253d9e-ac72-4a4e-822d-906dae2221f3",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "04352095-9e26-4592-b789-ef164b81f38c",
                    "e9284b0c-bc55-455a-a3c3-7607c40dd732",
                    "2dfa6c42-fbca-4324-8039-d19b4bd07090",
                    "54b07089-26c6-4d8d-a183-1ba7c9e73aa1"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1976,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                },
                {
                  "uuid": "07eb62e0-f997-429e-b04c-9248bb4a4b35",
                  "title": "on fail",
                  "fullFile": "",
                  "file": "",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should show an error",
                      "fullTitle": " Todo Toggling on fail should show an error",
                      "timedOut": null,
                      "duration": 478,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "errorMessage.assertVisible();\nerrorMessage.assertText('Unable to update a todo');",
                      "err": {},
                      "uuid": "6a61dc4a-5ca0-4314-b455-7aff2099f2c8",
                      "parentUUID": "07eb62e0-f997-429e-b04c-9248bb4a4b35",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should not toggle a todo",
                      "fullTitle": " Todo Toggling on fail should not toggle a todo",
                      "timedOut": null,
                      "duration": 477,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "todos.assertCompleted(0);\ntodos.statusToggler(0).should('be.checked');",
                      "err": {},
                      "uuid": "f074f981-5f7f-4dfc-a5c8-65f4c73b83a0",
                      "parentUUID": "07eb62e0-f997-429e-b04c-9248bb4a4b35",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should cancel loading",
                      "fullTitle": " Todo Toggling on fail should cancel loading",
                      "timedOut": null,
                      "duration": 539,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.flushJSTimers();\ntodos.assertNotLoading(0);",
                      "err": {},
                      "uuid": "3e6cc2c2-abd5-4e49-9683-ec429390ed72",
                      "parentUUID": "07eb62e0-f997-429e-b04c-9248bb4a4b35",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should not update the counter",
                      "fullTitle": " Todo Toggling on fail should not update the counter",
                      "timedOut": null,
                      "duration": 491,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.todosCounter().should('have.text', '2 items left');",
                      "err": {},
                      "uuid": "b59b18b7-4543-41f3-a725-3a43fafa6ac7",
                      "parentUUID": "07eb62e0-f997-429e-b04c-9248bb4a4b35",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should allow to toggle again",
                      "fullTitle": " Todo Toggling on fail should allow to toggle again",
                      "timedOut": null,
                      "duration": 662,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.mockUpdate(257334).as('updateRequest2');\ntodos.statusToggler(0).click();\ncy.wait('@updateRequest2');\ntodos.assertNotCompleted(0);",
                      "err": {},
                      "uuid": "ffca3251-871d-4141-8d4b-9ebc1960ee7f",
                      "parentUUID": "07eb62e0-f997-429e-b04c-9248bb4a4b35",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "6a61dc4a-5ca0-4314-b455-7aff2099f2c8",
                    "f074f981-5f7f-4dfc-a5c8-65f4c73b83a0",
                    "3e6cc2c2-abd5-4e49-9683-ec429390ed72",
                    "b59b18b7-4543-41f3-a725-3a43fafa6ac7",
                    "ffca3251-871d-4141-8d4b-9ebc1960ee7f"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 2647,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                },
                {
                  "uuid": "556b6f44-dbee-4a87-9997-2331a3a2a2ad",
                  "title": "if filtered",
                  "fullFile": "",
                  "file": "",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should hide a todo on success",
                      "fullTitle": " Todo Toggling if filtered should hide a todo on success",
                      "timedOut": null,
                      "duration": 654,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.mockUpdate(257334).as('updateRequest');\ntodos.statusToggler(0).click();\ncy.wait('@updateRequest');\ntodos.assertCount(2);\ntodos.assertTitle(0, 'CSS');",
                      "err": {},
                      "uuid": "30f291e2-02c0-44f0-bdee-1b9cf44802bb",
                      "parentUUID": "556b6f44-dbee-4a87-9997-2331a3a2a2ad",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should show a todo on success when selected an oposite filter",
                      "fullTitle": " Todo Toggling if filtered should show a todo on success when selected an oposite filter",
                      "timedOut": null,
                      "duration": 604,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.mockUpdate(257334).as('updateRequest');\ntodos.statusToggler(0).click();\nfilter.link('active').click();\ncy.wait('@updateRequest');\ntodos.assertCount(3);\ntodos.assertTitle(0, 'HTML');",
                      "err": {},
                      "uuid": "eaf6fb03-d769-46ad-91ae-3783076a6ec1",
                      "parentUUID": "556b6f44-dbee-4a87-9997-2331a3a2a2ad",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should not hide a todo on fail",
                      "fullTitle": " Todo Toggling if filtered should not hide a todo on fail",
                      "timedOut": null,
                      "duration": 589,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "// to prevent Cypress from failing the test on uncaught exception\ncy.once('uncaught:exception', () => false);\npage.mockUpdate(257334, {\n  statusCode: 503,\n  body: 'Service Unavailable'\n}).as('updateRequest');\ntodos.statusToggler(0).click();\ncy.wait('@updateRequest');\ntodos.assertCount(3);\ntodos.assertTitle(0, 'HTML');",
                      "err": {},
                      "uuid": "d85b80e2-1b6e-4e58-abc8-bc6c077b3df9",
                      "parentUUID": "556b6f44-dbee-4a87-9997-2331a3a2a2ad",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "30f291e2-02c0-44f0-bdee-1b9cf44802bb",
                    "eaf6fb03-d769-46ad-91ae-3783076a6ec1",
                    "d85b80e2-1b6e-4e58-abc8-bc6c077b3df9"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1847,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "c09d5b73-98b4-45a2-8846-efb2d8f4e9dc",
              "title": "Toggle All Button",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "b0dee25f-2de0-4215-b88c-da168c54d0e3",
                  "title": "if there are no todos",
                  "fullFile": "",
                  "file": "",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should not be visible while loading todos",
                      "fullTitle": " Toggle All Button if there are no todos should not be visible while loading todos",
                      "timedOut": null,
                      "duration": 224,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.mockLoad({\n  body: []\n}).as('loadRequest');\npage.pauseTimers();\npage.visit();\npage.toggleAllButton().should('not.exist');",
                      "err": {},
                      "uuid": "e7cb7f50-2ce2-446d-a18c-77aeb792df6a",
                      "parentUUID": "b0dee25f-2de0-4215-b88c-da168c54d0e3",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should not be visible when loaded",
                      "fullTitle": " Toggle All Button if there are no todos should not be visible when loaded",
                      "timedOut": null,
                      "duration": 279,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.mockLoad({\n  body: []\n}).as('loadRequest');\npage.visit();\ncy.wait('@loadRequest');\npage.toggleAllButton().should('not.exist');",
                      "err": {},
                      "uuid": "22a211a7-b60d-4bed-a313-ed876086026a",
                      "parentUUID": "b0dee25f-2de0-4215-b88c-da168c54d0e3",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should appear after adding a todo",
                      "fullTitle": " Toggle All Button if there are no todos should appear after adding a todo",
                      "timedOut": null,
                      "duration": 573,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.mockLoad({\n  body: []\n}).as('loadRequest');\npage.mockCreate().as('createRequest');\npage.visit();\ncy.wait('@loadRequest');\npage.newTodoField().type('First todo{enter}');\ncy.wait('@createRequest');\npage.toggleAllButton().should('exist');",
                      "err": {},
                      "uuid": "91702b2a-63e9-4d2f-92fd-9d8fda14f200",
                      "parentUUID": "b0dee25f-2de0-4215-b88c-da168c54d0e3",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should disappear after removing the last todo",
                      "fullTitle": " Toggle All Button if there are no todos should disappear after removing the last todo",
                      "timedOut": null,
                      "duration": 462,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const todo = {\n  \"id\": 257334,\n  \"createdAt\": \"2023-09-19T08:21:56.486Z\",\n  \"updatedAt\": \"2023-09-19T08:23:07.096Z\",\n  \"userId\": 1,\n  \"title\": \"HTML\",\n  \"completed\": false\n};\npage.mockLoad({\n  body: [todo]\n}).as('loadRequest');\npage.mockDelete(257334).as('deleteRequest');\npage.visit();\ncy.wait('@loadRequest');\ntodos.deleteButton(0).click();\ncy.wait('@deleteRequest');\npage.toggleAllButton().should('not.exist');",
                      "err": {},
                      "uuid": "053c1b68-68d7-4dbc-98c9-4d254d4502f3",
                      "parentUUID": "b0dee25f-2de0-4215-b88c-da168c54d0e3",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "e7cb7f50-2ce2-446d-a18c-77aeb792df6a",
                    "22a211a7-b60d-4bed-a313-ed876086026a",
                    "91702b2a-63e9-4d2f-92fd-9d8fda14f200",
                    "053c1b68-68d7-4dbc-98c9-4d254d4502f3"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1538,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                },
                {
                  "uuid": "0fc41805-758e-437b-a223-031f05011d90",
                  "title": "if all todos are completed",
                  "fullFile": "",
                  "file": "",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should be visible",
                      "fullTitle": " Toggle All Button if all todos are completed should be visible",
                      "timedOut": null,
                      "duration": 324,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.toggleAllButton().should('exist');",
                      "err": {},
                      "uuid": "10193862-ef57-4a50-a7d6-8521754a70a8",
                      "parentUUID": "0fc41805-758e-437b-a223-031f05011d90",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should stay visible after filtering out all the todos",
                      "fullTitle": " Toggle All Button if all todos are completed should stay visible after filtering out all the todos",
                      "timedOut": null,
                      "duration": 377,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "filter.link('active').click();\npage.toggleAllButton().should('exist');",
                      "err": {},
                      "uuid": "1be75663-598b-4e6e-b28b-62cc877275a4",
                      "parentUUID": "0fc41805-758e-437b-a223-031f05011d90",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should be active",
                      "fullTitle": " Toggle All Button if all todos are completed should be active",
                      "timedOut": null,
                      "duration": 282,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.toggleAllButton().should('have.class', 'active');",
                      "err": {},
                      "uuid": "ed3c7c29-1f2e-42df-ae70-e6c5025d578a",
                      "parentUUID": "0fc41805-758e-437b-a223-031f05011d90",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should become not active after toggling a todo",
                      "fullTitle": " Toggle All Button if all todos are completed should become not active after toggling a todo",
                      "timedOut": null,
                      "duration": 462,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.mockUpdate(257335).as('updateRequest');\ntodos.statusToggler(1).click();\ncy.wait('@updateRequest');\npage.toggleAllButton().should('not.have.class', 'active');",
                      "err": {},
                      "uuid": "e089f486-3d24-4fa2-8d7e-700511524649",
                      "parentUUID": "0fc41805-758e-437b-a223-031f05011d90",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should stay active after a todo toggling fail",
                      "fullTitle": " Toggle All Button if all todos are completed should stay active after a todo toggling fail",
                      "timedOut": null,
                      "duration": 459,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "// to prevent Cypress from failing the test on uncaught exception\ncy.once('uncaught:exception', () => false);\npage.mockUpdate(257335, {\n  statusCode: 503\n}).as('updateRequest');\ntodos.statusToggler(1).click();\ncy.wait('@updateRequest');\npage.toggleAllButton().should('have.class', 'active');",
                      "err": {},
                      "uuid": "0935cb23-9416-44f2-8561-9bc8ea0e4a31",
                      "parentUUID": "0fc41805-758e-437b-a223-031f05011d90",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [
                    {
                      "uuid": "e4b57a64-2a5a-42f9-aa0c-e00705855e95",
                      "title": "on click",
                      "fullFile": "",
                      "file": "",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "should send requests for all todos",
                          "fullTitle": " Toggle All Button if all todos are completed on click should send requests for all todos",
                          "timedOut": null,
                          "duration": 565,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "// if before each pass",
                          "err": {},
                          "uuid": "3fb8a614-b4f9-45ad-8ef8-dfe80dc33763",
                          "parentUUID": "e4b57a64-2a5a-42f9-aa0c-e00705855e95",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "should make all todos active",
                          "fullTitle": " Toggle All Button if all todos are completed on click should make all todos active",
                          "timedOut": null,
                          "duration": 614,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "todos.assertNotCompleted(0);\ntodos.assertNotCompleted(1);\ntodos.assertNotCompleted(2);\ntodos.assertNotCompleted(3);\ntodos.assertNotCompleted(4);",
                          "err": {},
                          "uuid": "c670ece7-42a5-49ea-9241-0773afc8515d",
                          "parentUUID": "e4b57a64-2a5a-42f9-aa0c-e00705855e95",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "should become not active",
                          "fullTitle": " Toggle All Button if all todos are completed on click should become not active",
                          "timedOut": null,
                          "duration": 554,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "page.toggleAllButton().should('not.have.class', 'active');",
                          "err": {},
                          "uuid": "e26529e8-7af2-47bc-a2bb-d850c67356ce",
                          "parentUUID": "e4b57a64-2a5a-42f9-aa0c-e00705855e95",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "3fb8a614-b4f9-45ad-8ef8-dfe80dc33763",
                        "c670ece7-42a5-49ea-9241-0773afc8515d",
                        "e26529e8-7af2-47bc-a2bb-d850c67356ce"
                      ],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 1733,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 2000
                    }
                  ],
                  "passes": [
                    "10193862-ef57-4a50-a7d6-8521754a70a8",
                    "1be75663-598b-4e6e-b28b-62cc877275a4",
                    "ed3c7c29-1f2e-42df-ae70-e6c5025d578a",
                    "e089f486-3d24-4fa2-8d7e-700511524649",
                    "0935cb23-9416-44f2-8561-9bc8ea0e4a31"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1904,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                },
                {
                  "uuid": "24ad36fa-600d-4c46-bebc-eb41d487acc8",
                  "title": "if all todos are active",
                  "fullFile": "",
                  "file": "",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should be visible",
                      "fullTitle": " Toggle All Button if all todos are active should be visible",
                      "timedOut": null,
                      "duration": 356,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.toggleAllButton().should('exist');",
                      "err": {},
                      "uuid": "9dc4f9fc-a40c-4ee7-83ab-b5df1de38cc0",
                      "parentUUID": "24ad36fa-600d-4c46-bebc-eb41d487acc8",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should not be active",
                      "fullTitle": " Toggle All Button if all todos are active should not be active",
                      "timedOut": null,
                      "duration": 291,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.toggleAllButton().should('not.have.class', 'active');",
                      "err": {},
                      "uuid": "f334224f-b516-442d-90af-8e3b267920b8",
                      "parentUUID": "24ad36fa-600d-4c46-bebc-eb41d487acc8",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should not become active after toggling a todo",
                      "fullTitle": " Toggle All Button if all todos are active should not become active after toggling a todo",
                      "timedOut": null,
                      "duration": 475,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.mockUpdate(257335).as('updateRequest');\ntodos.statusToggler(1).click();\ncy.wait('@updateRequest');\npage.toggleAllButton().should('not.have.class', 'active');",
                      "err": {},
                      "uuid": "32dc84fd-754a-47d6-b724-6147365d36aa",
                      "parentUUID": "24ad36fa-600d-4c46-bebc-eb41d487acc8",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [
                    {
                      "uuid": "64ddcb5b-caae-4510-bdb6-0011dc1dabe1",
                      "title": "on click",
                      "fullFile": "",
                      "file": "",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "should send requests for all todos",
                          "fullTitle": " Toggle All Button if all todos are active on click should send requests for all todos",
                          "timedOut": null,
                          "duration": 512,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "// if before each pass",
                          "err": {},
                          "uuid": "eecbd9e7-f515-4555-848a-e69631b55b6e",
                          "parentUUID": "64ddcb5b-caae-4510-bdb6-0011dc1dabe1",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "should make all todos completed",
                          "fullTitle": " Toggle All Button if all todos are active on click should make all todos completed",
                          "timedOut": null,
                          "duration": 592,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "todos.assertCompleted(0);\ntodos.assertCompleted(1);\ntodos.assertCompleted(2);\ntodos.assertCompleted(3);\ntodos.assertCompleted(4);",
                          "err": {},
                          "uuid": "a823201a-3712-4a73-9b5d-7ca161c35aee",
                          "parentUUID": "64ddcb5b-caae-4510-bdb6-0011dc1dabe1",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "should become active",
                          "fullTitle": " Toggle All Button if all todos are active on click should become active",
                          "timedOut": null,
                          "duration": 591,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "page.toggleAllButton().should('have.class', 'active');",
                          "err": {},
                          "uuid": "0e648c4c-126d-49e8-94ba-7a3862095f8c",
                          "parentUUID": "64ddcb5b-caae-4510-bdb6-0011dc1dabe1",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "eecbd9e7-f515-4555-848a-e69631b55b6e",
                        "a823201a-3712-4a73-9b5d-7ca161c35aee",
                        "0e648c4c-126d-49e8-94ba-7a3862095f8c"
                      ],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 1695,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 2000
                    }
                  ],
                  "passes": [
                    "9dc4f9fc-a40c-4ee7-83ab-b5df1de38cc0",
                    "f334224f-b516-442d-90af-8e3b267920b8",
                    "32dc84fd-754a-47d6-b724-6147365d36aa"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1122,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                },
                {
                  "uuid": "79c9e918-b6c4-47bd-be5a-934206ad56b5",
                  "title": "if there are some mixed todos",
                  "fullFile": "",
                  "file": "",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should be visible",
                      "fullTitle": " Toggle All Button if there are some mixed todos should be visible",
                      "timedOut": null,
                      "duration": 329,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.toggleAllButton().should('exist');",
                      "err": {},
                      "uuid": "39d63415-72d9-4045-8e60-9296db850c53",
                      "parentUUID": "79c9e918-b6c4-47bd-be5a-934206ad56b5",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should not be active",
                      "fullTitle": " Toggle All Button if there are some mixed todos should not be active",
                      "timedOut": null,
                      "duration": 310,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.toggleAllButton().should('not.have.class', 'active');",
                      "err": {},
                      "uuid": "d67f47b7-235e-447d-8364-5e382f8a2f27",
                      "parentUUID": "79c9e918-b6c4-47bd-be5a-934206ad56b5",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should become active after completing all todos",
                      "fullTitle": " Toggle All Button if there are some mixed todos should become active after completing all todos",
                      "timedOut": null,
                      "duration": 652,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "page.mockUpdate(257337).as('updateRequest1');\npage.mockUpdate(257338).as('updateRequest2');\ntodos.statusToggler(3).click();\ncy.wait('@updateRequest1');\ntodos.statusToggler(4).click();\ncy.wait('@updateRequest2');\npage.toggleAllButton().should('have.class', 'active');",
                      "err": {},
                      "uuid": "29b9081c-846b-4e4e-a6c1-a79fad36bed2",
                      "parentUUID": "79c9e918-b6c4-47bd-be5a-934206ad56b5",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [
                    {
                      "uuid": "2d0cfbc8-cb0c-46d6-b52b-c78f4a67ed1f",
                      "title": "on click",
                      "fullFile": "",
                      "file": "",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "should send requests only for not completed todos",
                          "fullTitle": " Toggle All Button if there are some mixed todos on click should send requests only for not completed todos",
                          "timedOut": null,
                          "duration": 523,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "cy.get('@update4').should('not.be.called');\ncy.get('@update5').should('not.be.called');\ncy.get('@update6').should('not.be.called');",
                          "err": {},
                          "uuid": "b893acd8-4181-44f2-8bb4-c6c351ec0d2f",
                          "parentUUID": "2d0cfbc8-cb0c-46d6-b52b-c78f4a67ed1f",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "should make all todos completed",
                          "fullTitle": " Toggle All Button if there are some mixed todos on click should make all todos completed",
                          "timedOut": null,
                          "duration": 523,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "todos.assertCompleted(0);\ntodos.assertCompleted(1);\ntodos.assertCompleted(2);\ntodos.assertCompleted(3);\ntodos.assertCompleted(4);",
                          "err": {},
                          "uuid": "b1ec5e60-ef20-4451-b177-7a12f1cfcb72",
                          "parentUUID": "2d0cfbc8-cb0c-46d6-b52b-c78f4a67ed1f",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "should become active",
                          "fullTitle": " Toggle All Button if there are some mixed todos on click should become active",
                          "timedOut": null,
                          "duration": 492,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "page.toggleAllButton().should('have.class', 'active');",
                          "err": {},
                          "uuid": "09625cd7-083c-4fb5-9d54-dfb54d597352",
                          "parentUUID": "2d0cfbc8-cb0c-46d6-b52b-c78f4a67ed1f",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "b893acd8-4181-44f2-8bb4-c6c351ec0d2f",
                        "b1ec5e60-ef20-4451-b177-7a12f1cfcb72",
                        "09625cd7-083c-4fb5-9d54-dfb54d597352"
                      ],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 1538,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 2000
                    }
                  ],
                  "passes": [
                    "39d63415-72d9-4045-8e60-9296db850c53",
                    "d67f47b7-235e-447d-8364-5e382f8a2f27",
                    "29b9081c-846b-4e4e-a6c1-a79fad36bed2"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1291,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "399f6a9e-d155-49ee-a7ce-b1b0c7c1ccaa",
              "title": "Renaming",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should not show forms by default",
                  "fullTitle": " Renaming should not show forms by default",
                  "timedOut": null,
                  "duration": 347,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "todos.titleField(0).should('not.exist');\ntodos.titleField(1).should('not.exist');\ntodos.titleField(2).should('not.exist');\ntodos.titleField(3).should('not.exist');\ntodos.titleField(4).should('not.exist');",
                  "err": {},
                  "uuid": "c8247825-8db6-4a22-ae22-7f05eee1ace8",
                  "parentUUID": "399f6a9e-d155-49ee-a7ce-b1b0c7c1ccaa",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [
                {
                  "uuid": "00a5ddca-a3ee-47a6-b292-99dbcec8e474",
                  "title": "Edit Form",
                  "fullFile": "",
                  "file": "",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [],
                  "suites": [
                    {
                      "uuid": "abd1225b-d56f-4236-8fde-b797c3286428",
                      "title": "by default",
                      "fullFile": "",
                      "file": "",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "should be opened on dblclick",
                          "fullTitle": " Renaming Edit Form by default should be opened on dblclick",
                          "timedOut": null,
                          "duration": 324,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "todos.title(0).trigger('dblclick');\ntodos.titleField(0).should('exist');",
                          "err": {},
                          "uuid": "7bdc2271-fb9e-49f7-afe5-0d8add1d5641",
                          "parentUUID": "abd1225b-d56f-4236-8fde-b797c3286428",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "should have current value",
                          "fullTitle": " Renaming Edit Form by default should have current value",
                          "timedOut": null,
                          "duration": 320,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "todos.title(0).trigger('dblclick');\ntodos.titleField(0).should('have.value', 'HTML');",
                          "err": {},
                          "uuid": "4151494a-dc9d-492a-918d-cf9c8673a82f",
                          "parentUUID": "abd1225b-d56f-4236-8fde-b797c3286428",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "should be focused",
                          "fullTitle": " Renaming Edit Form by default should be focused",
                          "timedOut": null,
                          "duration": 348,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "todos.title(0).trigger('dblclick');\ntodos.titleField(0).should('be.focused');",
                          "err": {},
                          "uuid": "0fa8cc0e-9e69-4b97-bb16-96074097fed4",
                          "parentUUID": "abd1225b-d56f-4236-8fde-b797c3286428",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "should hide a title",
                          "fullTitle": " Renaming Edit Form by default should hide a title",
                          "timedOut": null,
                          "duration": 334,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "todos.title(0).trigger('dblclick');\ntodos.title(0).should('not.exist');",
                          "err": {},
                          "uuid": "7413df9a-d89a-4256-8989-e0257672fdf7",
                          "parentUUID": "abd1225b-d56f-4236-8fde-b797c3286428",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "should hide DeleteButton",
                          "fullTitle": " Renaming Edit Form by default should hide DeleteButton",
                          "timedOut": null,
                          "duration": 332,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "todos.title(0).trigger('dblclick');\ntodos.deleteButton(0).should('not.exist');",
                          "err": {},
                          "uuid": "b8279ecb-7c8c-422a-aef3-30f56bd2f304",
                          "parentUUID": "abd1225b-d56f-4236-8fde-b797c3286428",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "should keep StatusToggler",
                          "fullTitle": " Renaming Edit Form by default should keep StatusToggler",
                          "timedOut": null,
                          "duration": 340,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "todos.title(0).trigger('dblclick');\ntodos.statusToggler(0).should('exist');",
                          "err": {},
                          "uuid": "32fc2360-40fa-4b4e-a1e4-ba4a8c970954",
                          "parentUUID": "abd1225b-d56f-4236-8fde-b797c3286428",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "should not open forms for other todos",
                          "fullTitle": " Renaming Edit Form by default should not open forms for other todos",
                          "timedOut": null,
                          "duration": 376,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "todos.title(0).trigger('dblclick');\ntodos.titleField(1).should('not.exist');\ntodos.titleField(2).should('not.exist');\ntodos.titleField(3).should('not.exist');\ntodos.titleField(4).should('not.exist');",
                          "err": {},
                          "uuid": "fb16bda3-2af3-4408-a602-da9955d16d68",
                          "parentUUID": "abd1225b-d56f-4236-8fde-b797c3286428",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "should not send a request on change",
                          "fullTitle": " Renaming Edit Form by default should not send a request on change",
                          "timedOut": null,
                          "duration": 429,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "const spy = cy.stub().callsFake(req => req.reply({\n  body: _objectSpread(_objectSpread({}, req.body), {}, {\n    id: 257334\n  })\n})).as('renameCallback');\npage.mockUpdate(257334, spy);\ntodos.title(0).trigger('dblclick');\ntodos.titleField(0).type('123');\ncy.get('@renameCallback').should('not.be.called');",
                          "err": {},
                          "uuid": "c0b56326-4f1e-4390-9e06-3f5236085d06",
                          "parentUUID": "abd1225b-d56f-4236-8fde-b797c3286428",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "7bdc2271-fb9e-49f7-afe5-0d8add1d5641",
                        "4151494a-dc9d-492a-918d-cf9c8673a82f",
                        "0fa8cc0e-9e69-4b97-bb16-96074097fed4",
                        "7413df9a-d89a-4256-8989-e0257672fdf7",
                        "b8279ecb-7c8c-422a-aef3-30f56bd2f304",
                        "32fc2360-40fa-4b4e-a1e4-ba4a8c970954",
                        "fb16bda3-2af3-4408-a602-da9955d16d68",
                        "c0b56326-4f1e-4390-9e06-3f5236085d06"
                      ],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 2803,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 2000
                    },
                    {
                      "uuid": "df3304af-25e6-4517-9074-68cc1db48e0b",
                      "title": "on Escape",
                      "fullFile": "",
                      "file": "",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "should be closed",
                          "fullTitle": " Renaming Edit Form on Escape should be closed",
                          "timedOut": null,
                          "duration": 540,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "todos.title(0).trigger('dblclick');\ntodos.titleField(0).type('123123{esc}');\ntodos.titleField(0).should('not.exist');",
                          "err": {},
                          "uuid": "2da21ed5-7878-463f-95ca-714136276af4",
                          "parentUUID": "df3304af-25e6-4517-9074-68cc1db48e0b",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "should keep current title",
                          "fullTitle": " Renaming Edit Form on Escape should keep current title",
                          "timedOut": null,
                          "duration": 531,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "todos.title(0).trigger('dblclick');\ntodos.titleField(0).type('123123{esc}');\ntodos.assertTitle(0, 'HTML');",
                          "err": {},
                          "uuid": "b5e03956-3f63-4b7a-a2eb-e407aaafeda9",
                          "parentUUID": "df3304af-25e6-4517-9074-68cc1db48e0b",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "should not send a request",
                          "fullTitle": " Renaming Edit Form on Escape should not send a request",
                          "timedOut": null,
                          "duration": 496,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "const spy = cy.stub().callsFake(req => req.reply({\n  body: _objectSpread(_objectSpread({}, req.body), {}, {\n    id: 257334\n  })\n})).as('renameCallback');\npage.mockUpdate(257334, spy);\ntodos.title(0).trigger('dblclick');\ntodos.titleField(0).type('123123{esc}');\ncy.get('@renameCallback').should('not.be.called');",
                          "err": {},
                          "uuid": "71ba3b06-831b-4502-85c7-63868af66d56",
                          "parentUUID": "df3304af-25e6-4517-9074-68cc1db48e0b",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "2da21ed5-7878-463f-95ca-714136276af4",
                        "b5e03956-3f63-4b7a-a2eb-e407aaafeda9",
                        "71ba3b06-831b-4502-85c7-63868af66d56"
                      ],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 1567,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 2000
                    },
                    {
                      "uuid": "7b53bcb9-a31e-4883-8a43-620acc47b23b",
                      "title": "on enter before recieved a response",
                      "fullFile": "",
                      "file": "",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "should send a request",
                          "fullTitle": " Renaming Edit Form on enter before recieved a response should send a request",
                          "timedOut": null,
                          "duration": 528,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "const spy = cy.stub().callsFake(req => req.reply({\n  body: _objectSpread(_objectSpread({}, req.body), {}, {\n    id: 257334\n  })\n})).as('renameCallback');\npage.mockUpdate(257334, spy);\ntodos.title(0).trigger('dblclick');\ntodos.titleField(0).type('123{enter}');\ncy.get('@renameCallback').should('have.callCount', 1);",
                          "err": {},
                          "uuid": "0af80709-f1cf-40e0-9fc4-84db999e868a",
                          "parentUUID": "7b53bcb9-a31e-4883-8a43-620acc47b23b",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "should show loader",
                          "fullTitle": " Renaming Edit Form on enter before recieved a response should show loader",
                          "timedOut": null,
                          "duration": 474,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "page.mockUpdate(257334);\ntodos.title(0).trigger('dblclick');\npage.pauseTimers();\ntodos.titleField(0).type('123{enter}');\ntodos.assertLoading(0);",
                          "err": {},
                          "uuid": "ff182a70-d279-416b-ac60-d9ae39939a60",
                          "parentUUID": "7b53bcb9-a31e-4883-8a43-620acc47b23b",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "should stay while waiting",
                          "fullTitle": " Renaming Edit Form on enter before recieved a response should stay while waiting",
                          "timedOut": null,
                          "duration": 0,
                          "state": "pending",
                          "speed": null,
                          "pass": false,
                          "fail": false,
                          "pending": true,
                          "context": null,
                          "code": "page.mockUpdate(257334);\ntodos.title(0).trigger('dblclick');\npage.pauseTimers();\ntodos.titleField(0).type('123{enter}');\ntodos.titleField(0).should('exist');",
                          "err": {},
                          "uuid": "7a2f2e88-c6a2-4d1a-93a4-d945798a4879",
                          "parentUUID": "7b53bcb9-a31e-4883-8a43-620acc47b23b",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "0af80709-f1cf-40e0-9fc4-84db999e868a",
                        "ff182a70-d279-416b-ac60-d9ae39939a60"
                      ],
                      "failures": [],
                      "pending": [
                        "7a2f2e88-c6a2-4d1a-93a4-d945798a4879"
                      ],
                      "skipped": [],
                      "duration": 1002,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 2000
                    },
                    {
                      "uuid": "3d9ed8b8-eeb7-4e0e-8afc-532b8fcc7160",
                      "title": "on success",
                      "fullFile": "",
                      "file": "",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "should cancel loading",
                          "fullTitle": " Renaming Edit Form on success should cancel loading",
                          "timedOut": null,
                          "duration": 720,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "todos.titleField(0).type('123{enter}');\ncy.wait('@renameRequest');\npage.flushJSTimers();\ntodos.assertNotLoading(0);",
                          "err": {},
                          "uuid": "9947a55a-5d1a-43bc-95b5-c1c576c9854a",
                          "parentUUID": "3d9ed8b8-eeb7-4e0e-8afc-532b8fcc7160",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "should be closed",
                          "fullTitle": " Renaming Edit Form on success should be closed",
                          "timedOut": null,
                          "duration": 729,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "todos.titleField(0).type('123{enter}');\ncy.wait('@renameRequest');\npage.flushJSTimers();\ntodos.titleField(0).should('not.exist');",
                          "err": {},
                          "uuid": "55cbdfc0-d317-4d02-8667-739c842899d4",
                          "parentUUID": "3d9ed8b8-eeb7-4e0e-8afc-532b8fcc7160",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "should show the updated title",
                          "fullTitle": " Renaming Edit Form on success should show the updated title",
                          "timedOut": null,
                          "duration": 820,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "todos.titleField(0).type('Something{enter}');\ncy.wait('@renameRequest');\npage.flushJSTimers();\ntodos.assertTitle(0, 'Something');",
                          "err": {},
                          "uuid": "e4938baa-37fe-4e38-9d80-7daf2b1559b6",
                          "parentUUID": "3d9ed8b8-eeb7-4e0e-8afc-532b8fcc7160",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "should trim the new title",
                          "fullTitle": " Renaming Edit Form on success should trim the new title",
                          "timedOut": null,
                          "duration": 974,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "todos.titleField(0).type('   Some new title      {enter}');\ncy.wait('@renameRequest');\npage.flushJSTimers();\ntodos.assertTitle(0, 'Some new title');",
                          "err": {},
                          "uuid": "131d597c-491e-4e61-9d38-9e4ffd5c275b",
                          "parentUUID": "3d9ed8b8-eeb7-4e0e-8afc-532b8fcc7160",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "9947a55a-5d1a-43bc-95b5-c1c576c9854a",
                        "55cbdfc0-d317-4d02-8667-739c842899d4",
                        "e4938baa-37fe-4e38-9d80-7daf2b1559b6",
                        "131d597c-491e-4e61-9d38-9e4ffd5c275b"
                      ],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 3243,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 2000
                    },
                    {
                      "uuid": "c87e3cee-953a-4e34-92c2-20690aa69711",
                      "title": "on fail",
                      "fullFile": "",
                      "file": "",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "should cancel loading",
                          "fullTitle": " Renaming Edit Form on fail should cancel loading",
                          "timedOut": null,
                          "duration": 603,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "page.flushJSTimers();\ntodos.assertNotLoading(0);",
                          "err": {},
                          "uuid": "a347d158-ef0a-43ca-85c8-aa23369251db",
                          "parentUUID": "c87e3cee-953a-4e34-92c2-20690aa69711",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "should stay open",
                          "fullTitle": " Renaming Edit Form on fail should stay open",
                          "timedOut": null,
                          "duration": 574,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "todos.titleField(0).should('exist');",
                          "err": {},
                          "uuid": "810df6bc-a5b3-4a56-9832-bc3541d1111e",
                          "parentUUID": "c87e3cee-953a-4e34-92c2-20690aa69711",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "should show error message",
                          "fullTitle": " Renaming Edit Form on fail should show error message",
                          "timedOut": null,
                          "duration": 557,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "errorMessage.assertVisible();\nerrorMessage.assertText('Unable to update a todo');",
                          "err": {},
                          "uuid": "dd3e7b24-57bf-49cb-90f9-c4ad24dda365",
                          "parentUUID": "c87e3cee-953a-4e34-92c2-20690aa69711",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "should hide error message in 3s",
                          "fullTitle": " Renaming Edit Form on fail should hide error message in 3s",
                          "timedOut": null,
                          "duration": 3574,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "page.flushJSTimers(3000);\nerrorMessage.assertHidden();",
                          "err": {},
                          "uuid": "4f4ed9db-8b80-42a8-a9ec-2fe70dfd1657",
                          "parentUUID": "c87e3cee-953a-4e34-92c2-20690aa69711",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "a347d158-ef0a-43ca-85c8-aa23369251db",
                        "810df6bc-a5b3-4a56-9832-bc3541d1111e",
                        "dd3e7b24-57bf-49cb-90f9-c4ad24dda365",
                        "4f4ed9db-8b80-42a8-a9ec-2fe70dfd1657"
                      ],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 5308,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 2000
                    },
                    {
                      "uuid": "33fed61d-ecdf-4d86-a548-7a217e8e7655",
                      "title": "if title was not changed",
                      "fullFile": "",
                      "file": "",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "should not send a request on enter",
                          "fullTitle": " Renaming Edit Form if title was not changed should not send a request on enter",
                          "timedOut": null,
                          "duration": 445,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "const spy = cy.stub().callsFake(req => req.reply({\n  body: _objectSpread(_objectSpread({}, req.body), {}, {\n    id: 257334\n  })\n})).as('renameCallback');\npage.mockUpdate(257334, spy);\ntodos.title(0).trigger('dblclick');\ntodos.titleField(0).type('{enter}');\ncy.get('@renameCallback').should('not.be.called');",
                          "err": {},
                          "uuid": "c3d30b9e-7a2f-40ae-8555-9db9d98a35aa",
                          "parentUUID": "33fed61d-ecdf-4d86-a548-7a217e8e7655",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "should be close on enter",
                          "fullTitle": " Renaming Edit Form if title was not changed should be close on enter",
                          "timedOut": null,
                          "duration": 474,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "todos.title(0).trigger('dblclick');\ntodos.titleField(0).type('{enter}');\ntodos.titleField(0).should('not.exist');",
                          "err": {},
                          "uuid": "fc7f24b1-ed93-4dd7-8830-797a017f8b3e",
                          "parentUUID": "33fed61d-ecdf-4d86-a548-7a217e8e7655",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "should be closed on Escape",
                          "fullTitle": " Renaming Edit Form if title was not changed should be closed on Escape",
                          "timedOut": null,
                          "duration": 407,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "todos.title(0).trigger('dblclick');\ntodos.titleField(0).type('{esc}');\ntodos.titleField(0).should('not.exist');",
                          "err": {},
                          "uuid": "a615688d-64a5-42b1-a247-0b4072ac1fc7",
                          "parentUUID": "33fed61d-ecdf-4d86-a548-7a217e8e7655",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "should preserve current title on save",
                          "fullTitle": " Renaming Edit Form if title was not changed should preserve current title on save",
                          "timedOut": null,
                          "duration": 414,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "todos.title(0).trigger('dblclick');\ntodos.titleField(0).type('{enter}');\ntodos.assertTitle(0, 'HTML');",
                          "err": {},
                          "uuid": "5ebe619d-02ce-48b2-a216-01c1a7c76eee",
                          "parentUUID": "33fed61d-ecdf-4d86-a548-7a217e8e7655",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "c3d30b9e-7a2f-40ae-8555-9db9d98a35aa",
                        "fc7f24b1-ed93-4dd7-8830-797a017f8b3e",
                        "a615688d-64a5-42b1-a247-0b4072ac1fc7",
                        "5ebe619d-02ce-48b2-a216-01c1a7c76eee"
                      ],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 1740,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 2000
                    },
                    {
                      "uuid": "ab93569f-4a0b-400e-b904-349da2c278d1",
                      "title": "if title became empty",
                      "fullFile": "",
                      "file": "",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "should not send an update request on enter",
                          "fullTitle": " Renaming Edit Form if title became empty should not send an update request on enter",
                          "timedOut": null,
                          "duration": 523,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "page.mockDelete(257334).as('deleteRequest');\ntodos.titleField(0).type('{enter}');\ncy.get('@renameCallback').should('not.be.called');",
                          "err": {},
                          "uuid": "6a162b7f-1183-4a89-bee0-60a99a0327af",
                          "parentUUID": "ab93569f-4a0b-400e-b904-349da2c278d1",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "should send a delete request on enter",
                          "fullTitle": " Renaming Edit Form if title became empty should send a delete request on enter",
                          "timedOut": null,
                          "duration": 601,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "page.mockDelete(257334).as('deleteRequest');\ntodos.titleField(0).type('{enter}');\ncy.wait('@deleteRequest');",
                          "err": {},
                          "uuid": "0c9d713c-ffd0-4ce3-879c-8bdcb92c16a3",
                          "parentUUID": "ab93569f-4a0b-400e-b904-349da2c278d1",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "should show loading on enter",
                          "fullTitle": " Renaming Edit Form if title became empty should show loading on enter",
                          "timedOut": null,
                          "duration": 535,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "page.mockDelete(257334).as('deleteRequest');\npage.pauseTimers();\ntodos.titleField(0).type('{enter}');\ntodos.assertLoading(0);",
                          "err": {},
                          "uuid": "7c5a62e5-6c5c-4aef-98bd-76d582547572",
                          "parentUUID": "ab93569f-4a0b-400e-b904-349da2c278d1",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "should delete a todo on success",
                          "fullTitle": " Renaming Edit Form if title became empty should delete a todo on success",
                          "timedOut": null,
                          "duration": 608,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "page.mockDelete(257334).as('deleteRequest');\ntodos.titleField(0).type('{enter}');\ncy.wait('@deleteRequest');\ntodos.assertCount(4);\ntodos.assertTitle(0, 'CSS');",
                          "err": {},
                          "uuid": "b5b01c9f-db7a-4951-82d5-b311836e2732",
                          "parentUUID": "ab93569f-4a0b-400e-b904-349da2c278d1",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "should show deleting error message on fail",
                          "fullTitle": " Renaming Edit Form if title became empty should show deleting error message on fail",
                          "timedOut": null,
                          "duration": 603,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "// to prevent Cypress from failing the test on uncaught exception\ncy.once('uncaught:exception', () => false);\npage.mockDelete(257334, {\n  statusCode: 503\n}).as('deleteRequest');\ntodos.titleField(0).type('{enter}');\ncy.wait('@deleteRequest');\nerrorMessage.assertVisible();\nerrorMessage.assertText('Unable to delete a todo');",
                          "err": {},
                          "uuid": "b7f20072-19ef-4e98-8055-d747c81c76c0",
                          "parentUUID": "ab93569f-4a0b-400e-b904-349da2c278d1",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "should hide loader on fail",
                          "fullTitle": " Renaming Edit Form if title became empty should hide loader on fail",
                          "timedOut": null,
                          "duration": 0,
                          "state": "pending",
                          "speed": null,
                          "pass": false,
                          "fail": false,
                          "pending": true,
                          "context": null,
                          "code": "// to prevent Cypress from failing the test on uncaught exception\ncy.once('uncaught:exception', () => false);\npage.mockDelete(257334, {\n  statusCode: 503\n}).as('deleteRequest');\ntodos.titleField(0).type('{enter}');\ncy.wait('@deleteRequest');\npage.flushJSTimers();\ntodos.assertNotLoading(0);",
                          "err": {},
                          "uuid": "770c7764-bdce-4291-a098-07a7dbc57bc3",
                          "parentUUID": "ab93569f-4a0b-400e-b904-349da2c278d1",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "should stay open on fail",
                          "fullTitle": " Renaming Edit Form if title became empty should stay open on fail",
                          "timedOut": null,
                          "duration": 601,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "// to prevent Cypress from failing the test on uncaught exception\ncy.once('uncaught:exception', () => false);\npage.mockDelete(257334, {\n  statusCode: 503\n}).as('deleteRequest');\ntodos.titleField(0).type('{enter}');\ncy.wait('@deleteRequest');\ntodos.titleField(0).should('exist');",
                          "err": {},
                          "uuid": "1e8cf89b-405e-4b88-b63d-5e108573652b",
                          "parentUUID": "ab93569f-4a0b-400e-b904-349da2c278d1",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "should be closed on Escape",
                          "fullTitle": " Renaming Edit Form if title became empty should be closed on Escape",
                          "timedOut": null,
                          "duration": 527,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "todos.titleField(0).type('{esc}');\ntodos.titleField(0).should('not.exist');",
                          "err": {},
                          "uuid": "1b7d9a68-ae6e-4abd-a5a0-f5d832cc799a",
                          "parentUUID": "ab93569f-4a0b-400e-b904-349da2c278d1",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "should preserve current title on close",
                          "fullTitle": " Renaming Edit Form if title became empty should preserve current title on close",
                          "timedOut": null,
                          "duration": 513,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "todos.titleField(0).type('{esc}');\ntodos.title(0).should('have.text', 'HTML');",
                          "err": {},
                          "uuid": "308ee19d-4bbf-44de-9b86-5356c8bcb451",
                          "parentUUID": "ab93569f-4a0b-400e-b904-349da2c278d1",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "6a162b7f-1183-4a89-bee0-60a99a0327af",
                        "0c9d713c-ffd0-4ce3-879c-8bdcb92c16a3",
                        "7c5a62e5-6c5c-4aef-98bd-76d582547572",
                        "b5b01c9f-db7a-4951-82d5-b311836e2732",
                        "b7f20072-19ef-4e98-8055-d747c81c76c0",
                        "1e8cf89b-405e-4b88-b63d-5e108573652b",
                        "1b7d9a68-ae6e-4abd-a5a0-f5d832cc799a",
                        "308ee19d-4bbf-44de-9b86-5356c8bcb451"
                      ],
                      "failures": [],
                      "pending": [
                        "770c7764-bdce-4291-a098-07a7dbc57bc3"
                      ],
                      "skipped": [],
                      "duration": 4511,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 2000
                    },
                    {
                      "uuid": "8ad6d7a4-ad83-4e43-b1c0-532f12cdf888",
                      "title": "on Blur",
                      "fullFile": "",
                      "file": "",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "should save",
                          "fullTitle": " Renaming Edit Form on Blur should save",
                          "timedOut": null,
                          "duration": 879,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "page.mockUpdate(257334).as('renameRequest');\ntodos.title(0).trigger('dblclick');\ntodos.titleField(0).clear();\ntodos.titleField(0).type('New title');\ntodos.titleField(0).blur();\ncy.wait('@renameRequest');\n// just in case\npage.flushJSTimers();\ntodos.assertTitle(0, 'New title');",
                          "err": {},
                          "uuid": "04328b63-a069-4fae-85cb-701a502d042f",
                          "parentUUID": "8ad6d7a4-ad83-4e43-b1c0-532f12cdf888",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "should cancel if title was not changed",
                          "fullTitle": " Renaming Edit Form on Blur should cancel if title was not changed",
                          "timedOut": null,
                          "duration": 462,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "const spy = cy.stub().callsFake(req => req.reply({\n  body: _objectSpread(_objectSpread({}, req.body), {}, {\n    id: 257334\n  })\n})).as('renameCallback');\npage.mockUpdate(257334, spy);\ntodos.title(0).trigger('dblclick');\ntodos.titleField(0).blur();\ncy.get('@renameCallback').should('not.be.called');\npage.flushJSTimers();\ntodos.titleField(0).should('not.exist');\ntodos.assertTitle(0, 'HTML');",
                          "err": {},
                          "uuid": "2025377c-8a04-47c4-8a52-858388885259",
                          "parentUUID": "8ad6d7a4-ad83-4e43-b1c0-532f12cdf888",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "should delete if title is empty",
                          "fullTitle": " Renaming Edit Form on Blur should delete if title is empty",
                          "timedOut": null,
                          "duration": 584,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "page.mockDelete(257334).as('deleteRequest');\ntodos.title(0).trigger('dblclick');\ntodos.titleField(0).clear();\ntodos.titleField(0).blur();\ncy.wait('@deleteRequest');\ntodos.assertCount(4);\ntodos.assertTitle(0, 'CSS');",
                          "err": {},
                          "uuid": "f31bcb74-5dea-45b6-86ec-1d72bcefb9b8",
                          "parentUUID": "8ad6d7a4-ad83-4e43-b1c0-532f12cdf888",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "04328b63-a069-4fae-85cb-701a502d042f",
                        "2025377c-8a04-47c4-8a52-858388885259",
                        "f31bcb74-5dea-45b6-86ec-1d72bcefb9b8"
                      ],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 1925,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 2000
                    }
                  ],
                  "passes": [],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                }
              ],
              "passes": [
                "c8247825-8db6-4a22-ae22-7f05eee1ace8"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 347,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "raw_reports",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}